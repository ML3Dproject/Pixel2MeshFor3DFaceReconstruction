idx2 is  tensor([[ 862, 2063,  668, 2752,  289,  132, 2941, 1472,  357,  137,  524, 1173,
         2127, 1871,  511, 2172, 2994, 2127,  137, 2402, 2864, 2864, 1943, 1416,
          137, 1107,  137,  137,  137, 1826,  248,  157,  852, 1734, 2526,  320,
         1859, 2756,  770,  491, 2270, 1903, 2517,  668, 2233, 1064, 1646, 1064,
          502, 2864, 1064, 2899, 2197, 1735, 2085, 2408, 2024, 1901,  292, 2085,
          102,  308, 1239, 2348, 2927, 2885,  447, 1268, 1268, 1803, 1916, 2079,
         2963,  860,  886, 1113, 1627, 1119, 1233, 1627, 1597,   16, 2902, 2237,
            9,  347, 2685, 1858,  595,  350,  350,  595, 1770, 1066, 1202, 2674,
         1696, 2265, 2121, 1777, 1922, 1778,  974, 2528,  479, 2737, 1520,  109,
         1316, 2782,  627, 2065, 1862,  123, 2880, 2482, 2065, 1502, 1057, 2655,
         1420, 2655, 1042, 2934,  619,  427, 1076, 2385, 2431, 1811,  927, 1158,
         1702, 1033, 2589, 1033, 1691, 1691, 1702, 1821, 1126, 1702,   71, 1924,
          449, 1680,  453, 2117,  939, 1629, 2020,  608, 1026,  646, 1924, 1136],
        [2751, 2025, 1196, 2025,  990, 2025, 1237, 2342, 2544, 2342, 2342, 2544,
         2342, 2544, 2238,  255,  255,  255,  255, 1237,  912,  883,  921,  780,
          921, 2495,  506,  506,  506, 2430,  506, 2183, 2236, 2025,  189,  189,
          907,  907,  907, 2384, 2544,  643,  189, 2025, 2574, 2342, 2544,  255,
         1237,  912,  921, 2495, 2962, 1293, 2183, 2183, 2183,  969, 2430,  969,
          511, 1715,  511, 1908, 2574, 2557,  283,  189,  283,  265, 2417, 1650,
         1487, 2342, 2342, 1237, 1790,  255, 2819, 1560, 2228, 1507, 2462,  424,
         1010, 2021, 1751, 1890, 1715, 1890, 1715, 2048, 1793,  709,  709,  709,
          709, 2406, 1214, 2316, 2456, 2109, 1376, 1334, 1455,  398,  502, 2034,
          596, 1708,  785,  777,  849, 2431, 1890, 1890, 1890,  767, 2316, 2908,
         1420, 2679,  114, 2306, 2882, 1398, 2788,  572, 2989,  153,   33,  421,
         2016,   12, 2789,  504, 1356, 1033, 2547, 2139, 1558, 2431,  737, 2431,
         2431, 2431, 2431,  965, 1173, 2030, 2968, 2747,  137, 2045, 2625,  706],
        [1837,  909,  790, 1799,  914,  302,  860,  867, 2230, 2372,  867,  530,
          564,  909,  194, 1608, 1391,  560, 2702, 2745, 2020,  203, 1977, 2110,
         1612, 1977, 2958, 2958,  846,  465,  379,  947,  903, 1739,   63, 1510,
         2336, 1223,  425, 2962, 2093,  708, 1609, 2261, 1739,  220, 2814,  284,
         1305, 1832, 2839,  524, 2652, 2025, 1244,  465,  337, 2369, 2369, 2222,
         1103, 2387, 1712, 1965,  715, 2229, 2575, 2004, 2575, 2843, 1709,  767,
         2800,  766,  766, 1305, 2866, 1939,  284,  643, 2202,  315, 1766, 2393,
         1130, 2673,  758, 1816,   19, 2992, 2468,   19, 1893,  157, 2396, 2195,
          372, 2800, 2070, 1571, 2719,  717,   52, 2941,  455,  181, 2620, 2349,
         1692, 1667,  890,  368,   37,  166,   19, 1420,  244, 2324, 2649,  340,
         1825,  475, 1551,  475, 2815, 1279, 1719, 2203, 2756, 1548, 2565, 2605,
         1602, 1016, 1765,   50, 1343, 1624, 1343,  443, 1345,  325, 2616,  325,
          325, 1283,  638,  990, 1279, 1354, 1716,  504, 2820, 1535, 1624, 1118],
        [ 593, 2707, 1827, 1862, 2526,  804, 1118,  209,  520, 1383, 1383,  193,
         2006, 2317, 1441, 1657, 1067, 2447,  845, 1826,  431,  616, 1906,   66,
         2481, 2345, 1353, 2481,  856, 1249, 1353, 1353, 2941,  226,  998, 1937,
          425,  385, 1937,  319, 2317, 1110,  194, 2305, 1073,  249, 2188, 1922,
         2005, 1418, 2419, 1906,  196,  616, 1440, 1353, 1859, 2669, 1548, 1440,
         2047,   58, 2047,  705,  922,  760, 1919, 2083, 2909, 2777, 1506,  164,
         2784, 1994,  888, 1667, 1667,  565, 2353, 1922, 2419, 2165, 1510, 2032,
          769, 2976, 1245,    4,  950,    4, 1130,  473, 1993, 2437, 2437, 1888,
         2711, 2784,   78, 2824, 2540, 1467, 1345,  815,  815, 2084, 2813, 2386,
          120,  187,  901,  611, 2595,  611,  492,  611,  611,  492, 2538,  414,
         2674,  396, 1812, 1812, 2974, 1348, 1002, 2846,  682,  393,  748,  982,
         2778, 2595, 2595, 2595, 1845, 1845,  611, 2119,  611,  611,  611,  611,
          611,  611,  611, 1348, 1677, 1523,  699, 1845, 2999, 1845, 1845, 1845]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0016, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[1303, 1035, 2467,  ...,  453,  453,  449],
        [1196, 1196,  135,  ..., 1370,   12, 1515],
        [2450,  425,  884,  ...,   49, 1461,  443],
        [1557, 1282,  804,  ...,  611,  611,  849]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0005, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0216, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2727, 2721,   30,  ...,  350,  350,  177],
        [2618, 1363, 2421,  ..., 2391, 2039,   31],
        [  42, 1284, 1570,  ..., 2259,  709, 1673],
        [2802, 2737, 2659,  ...,  204, 2047,   36]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0069, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1625,  0.0304, -0.0504],
         [ 0.1343, -0.0080, -0.0602],
         [ 0.1120, -0.0068, -0.0822],
         ...,
         [-0.1073,  0.0208,  0.0503],
         [-0.0948, -0.0216,  0.0553],
         [-0.1149, -0.0057,  0.0764]],

        [[ 0.1201,  0.0199, -0.0677],
         [ 0.1004, -0.0094, -0.0790],
         [ 0.0761, -0.0226, -0.0912],
         ...,
         [-0.0611,  0.0310,  0.0613],
         [-0.0643, -0.0143,  0.0699],
         [-0.0830,  0.0047,  0.0820]],

        [[ 0.1356,  0.0227, -0.0773],
         [ 0.1246, -0.0086, -0.0739],
         [ 0.0733, -0.0288, -0.0962],
         ...,
         [-0.1004,  0.0184,  0.0508],
         [-0.0862, -0.0268,  0.0614],
         [-0.1104, -0.0118,  0.0747]],

        [[ 0.1340,  0.0296, -0.0582],
         [ 0.1116, -0.0041, -0.0580],
         [ 0.0846, -0.0129, -0.0864],
         ...,
         [-0.0523,  0.0735,  0.0788],
         [-0.0297,  0.0280,  0.0999],
         [-0.0562,  0.0540,  0.1122]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0793, -0.0148, -0.0824],
         [ 0.0295,  0.0155, -0.1114],
         [ 0.0821,  0.0128, -0.0726],
         ...,
         [-0.0735, -0.0060,  0.0784],
         [-0.0715, -0.0014,  0.0912],
         [-0.0557,  0.0019,  0.1061]],

        [[ 0.0543,  0.0116, -0.1017],
         [ 0.0239,  0.0326, -0.1046],
         [ 0.0596,  0.0287, -0.0579],
         ...,
         [-0.0604,  0.0145,  0.0723],
         [-0.0580,  0.0172,  0.0903],
         [-0.0394,  0.0190,  0.1074]],

        [[ 0.0890, -0.0231, -0.0786],
         [ 0.0736, -0.0036, -0.1038],
         [ 0.0762,  0.0040, -0.0641],
         ...,
         [-0.0746, -0.0166,  0.1434],
         [-0.0744, -0.0125,  0.1541],
         [-0.0591, -0.0114,  0.1653]],

        [[ 0.0331,  0.0092, -0.1154],
         [-0.0085,  0.0282, -0.1183],
         [ 0.0237,  0.0260, -0.0821],
         ...,
         [-0.0178, -0.0291,  0.0881],
         [-0.0222, -0.0244,  0.0975],
         [-0.0135, -0.0212,  0.1139]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0370, -0.0030,  0.0365],
         [-0.0092, -0.0153, -0.0315],
         [ 0.0376, -0.0022, -0.1124],
         ...,
         [-0.0258, -0.0116,  0.0064],
         [-0.0195, -0.0140,  0.0302],
         [-0.0197, -0.0106, -0.0106]],

        [[ 0.0075,  0.0047,  0.0469],
         [-0.0210, -0.0150,  0.0242],
         [ 0.0195, -0.0017, -0.0790],
         ...,
         [-0.0122, -0.0276,  0.0286],
         [-0.0095, -0.0291,  0.0509],
         [-0.0051, -0.0251,  0.0084]],

        [[ 0.0319, -0.0338, -0.0130],
         [ 0.0048, -0.0355, -0.0461],
         [ 0.0272, -0.0252, -0.1107],
         ...,
         [-0.0191, -0.0165,  0.0594],
         [-0.0154, -0.0196,  0.0798],
         [-0.0136, -0.0155,  0.0446]],

        [[ 0.0410, -0.0091,  0.0734],
         [-0.0014, -0.0238,  0.0439],
         [ 0.0327, -0.0051, -0.0462],
         ...,
         [ 0.0591,  0.0051,  0.1006],
         [ 0.0636,  0.0090,  0.1210],
         [ 0.0632,  0.0061,  0.0874]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[2777, 2945,  512, 2014, 2634,  723,  903, 2232, 2761, 2334, 2024, 2014,
         2024, 2738,  263, 2941, 1359, 1359, 2334,  401, 1789,  825, 1789, 2089,
          159,  159,  864, 2593, 1560, 2162,  864, 2160, 1958, 2945, 1779,  723,
          723,  723,  723, 1937, 2282,  129,  512, 2014, 1779, 2355, 1957, 1097,
         2403, 1789,  958,  661,  791, 1130, 1780,  789, 1371, 1892,  543, 2686,
         2233, 2398, 2233, 2233,  723,  599, 2296,  599,  599, 2749,   29,   29,
         1969, 2185, 2185, 2403, 1930,  812, 1171, 1799, 1268, 1481, 1123,  613,
           48,  642, 1513, 1079, 1762,  745,  697,  608, 2749, 2144, 2144, 2144,
          776, 2445, 2402, 2018,  467, 1704,  137,   84,  578, 1816, 2139, 1014,
         2929,  587, 2495,  630, 2138, 2488, 1308, 1308, 2488, 1047, 1674,  682,
         2615,  898, 2618, 2725,  898, 1928, 1690,  987, 2044,   52, 2307, 1938,
         1407, 1640, 1352, 1847,  536,  202,  470, 2488,  262,  219,  219, 2576,
         1047,  881,  881, 1818,  503,  706, 2832,  967, 1475,  572, 2419, 2960],
        [1358,  975,  874,  975,  874,  874,   38,  387,  387, 1358, 1358,  975,
         1358,  387,  692,  387,  740, 2875, 1773,  387, 2259, 2263, 1788, 1437,
          710,  581, 1437,  710,  726, 1592, 1437, 1592, 1590, 1358,  874, 2315,
         1551, 1503, 2095, 1797,  387,  387, 2505,  975, 1358, 1797, 2656, 1797,
          187, 2259, 1728, 2952,  923,  750, 2140, 1264, 1264,  235, 2140, 1392,
         2126, 2140, 2126, 2140,  526,  526,  398, 2315, 1775,  673, 1613,  722,
          722,  118, 2961, 1669, 1669, 1428, 2936, 1669, 1984, 2923, 2089, 1068,
         1128, 2470, 1264, 1290, 2722, 2756, 2722, 2722, 2646,  541,  673, 2168,
         1965,  722,  496, 1251, 1743, 1613,  328, 2484, 1476, 2020, 1346,  911,
         2435, 2732, 2575, 2462, 2993,  281, 2722,  365, 2931, 2722,  959, 1094,
         2804, 1492, 2895,  959,  959, 1160,  243, 1493, 2007,  251,  138,   95,
          176, 1298,  190,  655, 1561, 2696, 1511,  578, 1467,  146, 1753, 2054,
          365,  178, 2030,  680, 1160, 2705, 2861, 2696,   71, 1204,  303, 1894],
        [ 573,  573, 1275, 1597, 1275, 1686, 1480, 1480, 2747, 2747, 2747, 2375,
         2747, 2747,  564, 1413, 1413, 1413,  557, 1480,  748,  286,  626,  564,
         1929, 1896,   53, 2199, 2456, 1468,   53, 2899, 2969, 1431,  575, 1508,
           92, 1648,   32,  266, 1136,  282,  844,  713, 2915,  419,  266,  682,
         1480, 2795,  800, 1665, 2592, 2899, 2625, 2592, 2167, 1618,  447, 1900,
         1683,  267, 1061, 2901,  996, 2938,  750, 1508,  481, 1005, 1902,  338,
         2452,   46,   46,   46,   46,  419,  682,  323, 2579, 2579, 1712, 1341,
          294, 2563, 1643,  909, 2600,  909, 2600, 2613,  505,  289,  317, 2693,
         1242, 2114, 1635, 1194,  778, 2533, 2290, 2384,  420,  420,   20, 2818,
         1691, 2344, 2039, 2455, 2246,  747,  172,  854,  909,  853,  778,  490,
         2232,  769, 1945,  817,   90,  902,  227, 2019,  738, 2029, 2015, 2880,
          922,  551, 2097, 2903, 1728,   96, 2549, 2545, 1728, 2730, 1728,  906,
         2730, 2730, 2730,  738,  902, 2234, 2512, 1927, 2511, 1035, 1728,  527],
        [1824,  434, 2018,  434, 2018, 2018, 2620, 1819, 1632, 1563, 1563,  221,
         1563, 1400, 1575, 1819, 1819, 1563, 1563, 2772, 1067, 2655, 1957, 1563,
         1957, 1067,  815, 2655, 1966, 1207,  998, 2037,  110, 2844, 2018, 2018,
         2018, 2018, 2018, 2178, 1400, 1400, 2018, 2018, 2844, 2606, 1915, 2727,
         2002, 1067, 2290, 1957, 1128, 2450, 2970,  998, 2306,  883, 2970, 2963,
         1157,  590,  653, 2500, 2844, 1519,  121, 2018,  121,  966, 1107, 2164,
         2698, 2484, 2602, 2606, 1590, 2727, 2727, 2727, 1462,  511,  238,  554,
          691,  228, 2970, 2546, 1776, 2546, 1776, 2500, 2255,  959, 1135, 1135,
         1135, 2639, 2226, 1048,  966, 1924, 2470,  215, 1378, 2542, 2705,  548,
          689,  445, 1623, 2755, 2022,  947,  119, 1376, 1963,  136, 1048, 1318,
         1356,  296,  692, 1318, 2573, 1479,  215, 1833, 1141,  303, 1871, 1210,
          489, 1679, 2345, 2491, 2874,  207, 2874, 2740, 2708,  947,   21, 2259,
           60, 1754, 1116,  799,   23, 2540, 1222,  313, 2344,  153, 2205,  881]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0015, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[ 599, 2632,  599,  ...,  470,  470, 1402],
        [ 398,  526,  854,  ..., 1900, 1467, 2574],
        [1597, 1431,  161,  ..., 2730, 2730, 2730],
        [ 434, 1135, 2903,  ..., 2708, 2444, 1327]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0004, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0237, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2126, 1216, 2632,  ..., 2835,  327, 2835],
        [ 908, 1042,  546,  ..., 1321, 2369, 2631],
        [1491, 1897, 1508,  ...,  115,  760,  925],
        [1581,  802, 1541,  ..., 1181,   93, 1364]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0094, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1723,  0.0510, -0.0328],
         [ 0.1704,  0.0163, -0.0331],
         [ 0.1364,  0.0199, -0.0600],
         ...,
         [-0.1275,  0.0171,  0.0481],
         [-0.1092, -0.0235,  0.0521],
         [-0.1357, -0.0100,  0.0719]],

        [[ 0.1285,  0.0168, -0.0843],
         [ 0.1130, -0.0166, -0.0904],
         [ 0.0793, -0.0298, -0.1067],
         ...,
         [-0.0975,  0.0138,  0.0521],
         [-0.0877, -0.0274,  0.0614],
         [-0.1093, -0.0097,  0.0800]],

        [[ 0.1617,  0.0551, -0.0342],
         [ 0.1671,  0.0276, -0.0318],
         [ 0.1251,  0.0270, -0.0630],
         ...,
         [-0.1201,  0.0202,  0.0473],
         [-0.1005, -0.0216,  0.0573],
         [-0.1295, -0.0066,  0.0748]],

        [[ 0.1108,  0.0256, -0.0826],
         [ 0.1060,  0.0015, -0.0816],
         [ 0.0544, -0.0301, -0.1025],
         ...,
         [-0.0422,  0.0506,  0.0613],
         [-0.0384, -0.0008,  0.0862],
         [-0.0515,  0.0198,  0.0959]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 1.1034e-01, -3.3449e-02, -4.3405e-03],
         [ 9.5065e-02, -2.1402e-02, -4.2854e-02],
         [ 1.1943e-01, -2.1233e-02,  4.5377e-03],
         ...,
         [-6.2326e-02, -3.1048e-02,  1.3914e-01],
         [-6.0973e-02, -2.6804e-02,  1.4061e-01],
         [-4.8875e-02, -2.3844e-02,  1.4781e-01]],

        [[ 7.0096e-02, -3.1639e-03, -9.0401e-02],
         [ 3.3878e-02,  1.9181e-02, -1.0482e-01],
         [ 7.2517e-02,  2.0680e-02, -4.5391e-02],
         ...,
         [-7.9551e-02, -2.9313e-04,  1.3137e-01],
         [-7.4177e-02,  4.7778e-03,  1.4570e-01],
         [-4.9245e-02,  7.5106e-03,  1.6082e-01]],

        [[ 1.1448e-01, -1.7815e-02, -5.1182e-02],
         [ 9.5974e-02, -7.5160e-04, -8.4810e-02],
         [ 1.1328e-01, -4.3176e-03, -3.9716e-02],
         ...,
         [-6.3491e-02, -3.5934e-02,  1.7041e-01],
         [-6.1334e-02, -2.9334e-02,  1.7566e-01],
         [-4.7304e-02, -2.4862e-02,  1.8598e-01]],

        [[ 5.1394e-02,  6.9194e-05, -9.0468e-02],
         [ 3.7692e-02,  1.9370e-02, -1.0558e-01],
         [ 5.0084e-02,  1.9561e-02, -5.0970e-02],
         ...,
         [-4.8758e-02, -2.1498e-02,  9.0339e-02],
         [-4.6750e-02, -1.9237e-02,  1.0267e-01],
         [-2.6652e-02, -1.7261e-02,  1.2032e-01]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0613, -0.0201,  0.0252],
         [ 0.0294, -0.0269, -0.0202],
         [ 0.0752, -0.0096, -0.0738],
         ...,
         [-0.0353, -0.0146,  0.0147],
         [-0.0308, -0.0185,  0.0354],
         [-0.0301, -0.0141, -0.0013]],

        [[ 0.0076,  0.0149,  0.0076],
         [-0.0269, -0.0045, -0.0128],
         [ 0.0164,  0.0131, -0.1258],
         ...,
         [-0.0343, -0.0234,  0.0119],
         [-0.0348, -0.0264,  0.0310],
         [-0.0284, -0.0205, -0.0091]],

        [[ 0.0536,  0.0030,  0.0119],
         [ 0.0239, -0.0140, -0.0242],
         [ 0.0637,  0.0051, -0.0801],
         ...,
         [-0.0351, -0.0228,  0.0259],
         [-0.0344, -0.0244,  0.0413],
         [-0.0297, -0.0217,  0.0090]],

        [[ 0.0208,  0.0059,  0.0312],
         [ 0.0010, -0.0072,  0.0109],
         [ 0.0333,  0.0005, -0.0738],
         ...,
         [ 0.0258, -0.0261,  0.0622],
         [ 0.0269, -0.0268,  0.0828],
         [ 0.0317, -0.0231,  0.0440]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[ 891, 1989, 1433, 1774,  359,  593,  763, 1227,  821,  447, 1875, 1425,
         1072,  821, 2930, 1336,  796, 1685,  121, 1844,  279,  234,  998, 2622,
         1223,  720, 1249,  720, 1249,  658, 1004, 1249,  881, 1537, 2768,   43,
          882, 2465, 2136,  761, 1425, 2850, 2768, 1433,  435, 1837, 2438,  176,
          709,  279,  537, 1299,  782, 2159, 1785, 1702,  469, 2490, 1702, 1785,
         1877, 1370, 1370, 1048,  645,  140, 1528,  264,  190, 2329,  608, 1937,
         1967, 1304, 1304, 1477, 1466, 1466, 1112, 1466,  992, 2431, 1406, 1314,
          149, 1191,  149,  461, 1711,  592, 2038, 1681,  261,  822,  160, 1930,
          974, 2884, 1139, 1872, 2846, 1758, 2968, 1834,   75,   75, 2941, 2330,
         1136,  630,  199, 1681, 2594,  750, 1807, 2907, 2062, 1511,  910, 2877,
         2846, 2140, 1058, 1058, 1058, 2855,  582, 2509, 2509, 2385,  582, 1247,
          355,  202, 2802, 1563, 2046, 1447,  197, 1608, 1939,  526,  526, 2059,
         1345, 1756,  526, 2855, 2855, 2728, 1265, 2514, 1145, 2897,  657,  864],
        [2622, 2622, 2622, 2622, 2622, 2622,  665, 2622, 2622, 2622, 2622, 2622,
         2622, 2622, 2682, 2321, 1808, 2622, 2622, 1987,  889,  389,  496, 2622,
         2742,   26,  213,  213,  154, 1957, 1957,  154,  365, 2622, 2622, 2622,
         2622, 2622, 2622,  665, 2622, 2622, 2622, 2622, 2622, 1987, 1987, 2513,
         1987,   15, 1721, 2123,  114,  949, 1957,  109, 1782, 1782, 1957, 1957,
         1071, 1957, 1957, 1957, 2622, 2622, 2622, 2622, 2622, 2622, 1987, 2017,
         1987, 2513, 1987, 2513, 2988, 2988, 1028, 2988, 1646, 2298, 2766, 2526,
          541,  680,  541, 1655, 2065,  272,  272, 2782, 2622, 2622, 2622, 2622,
         2622,  204, 2622,  345, 1372,  330, 2320, 1638, 1422, 2260, 1289,  270,
         2512, 2516, 1991,  199, 2185, 2065, 2061, 2061, 2782, 2600,  928, 2410,
         1638, 2726, 1133, 1533, 2410,   57, 2736,  483,  483, 2380,  871, 2726,
          569, 2965, 2782, 2600, 1769, 2169, 2600, 2908, 2600, 2942, 2183, 2183,
         2600, 2544, 2942,   57, 2337, 2380,  412, 1061, 1457, 1367, 1769,  538],
        [  39, 1157, 2776, 1157,   61,  120, 2574,  178, 1286, 2757, 2757, 2228,
          280, 2635, 2814,  879,  879,  879, 1657,  763, 2268,  748, 2192, 1116,
         1298, 2192, 2523, 2555, 2340,  587, 1473,  141, 2919, 2059,  976, 1089,
         2222,  674,  759, 1019,  732, 1829,  976,  323, 2222, 2859,   62, 2591,
         2034, 2400,  195, 1764,  876, 2143,  595,  347,  372,  226,  595,  561,
         2561, 2254, 2339, 1237,  674, 1256, 1928,  759,  761, 1722, 1824, 2995,
          180, 1483, 1483, 1746, 1328, 1201,  485,   32, 2792,  568, 2792, 1560,
            2, 2800,  930, 2108, 2712, 1377, 2712, 2712, 1556,   54,   54,   54,
          744, 2040, 2738, 1996, 1056, 1569,   79,  379, 1139, 1853, 2791,  224,
         1218, 1285, 1899, 2609,   55, 2653, 2220,   91,  187,   67,  971,  971,
          124,  544,  544, 1121,  544, 2537,   85,  576, 1991, 1628,  461, 2337,
          639, 1122, 1317, 2183,  459, 1694, 1393, 1061, 2237,  596, 1141, 1826,
         1302, 2316, 1547,  576, 2295, 2397,  694,  167,   13,  167, 1752,  916],
        [ 550, 1086, 2581,  965,  593, 2219,  834, 1414, 1414, 2015, 2015, 1086,
         2659,  550, 1542, 2308, 2308, 2376,  512,  512,  989, 2508, 1807, 1191,
          155, 1711, 2025, 2025, 1400, 1400, 1400, 1400, 1732, 1915, 1071, 1949,
           92, 2057, 1949, 1678, 2015, 1182, 1298, 2581, 1915,  868,  834, 1102,
         2536, 1459,  416,  989,  974,  974, 1400, 1400, 1400, 2070, 1400, 1400,
         1378, 2781, 1378, 1378, 2802, 2007, 2844, 1949, 2057, 2601,  771,  928,
         1064, 1029,  868, 1029, 1029, 1102, 1542, 1102, 2571, 2874, 2571, 2539,
         2259, 2874, 1217, 2583, 2583, 2583, 2583, 2331, 1551, 2798, 1498, 2409,
          369, 2519,  959,  652, 1395,  729,  868,  616,  943,  943, 1538,  176,
          176, 2067, 2539, 1367, 1217, 1367, 2605, 1367, 2583, 2605, 1007, 1484,
          450,   78,  461,  470, 1530, 2698,  592, 2784, 1826, 2824, 2495,  620,
          958,  251,  527, 1798, 2724,   50, 2169, 2169, 2169, 2724, 2169, 2202,
         2724, 1367, 1397, 2698, 2824,  132, 1033,  251, 2513, 1247, 2169, 1693]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0016, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[1284, 2727,  622,  ..., 1793, 2743, 1976],
        [2622, 2622, 2622,  ..., 1899,  798, 1715],
        [ 346,  976, 2990,  ..., 1289, 1645, 1943],
        [ 897, 2176,  733,  ..., 2724, 2169, 2067]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0005, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0246, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2678, 2605, 1023,  ..., 1573, 1451, 1674],
        [1560, 2255, 2622,  ...,  413,  413, 2255],
        [1816,  148,  448,  ..., 1485, 2091, 1273],
        [ 378, 1230, 1769,  ..., 2134,  974, 1030]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0098, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1550,  0.0543, -0.0516],
         [ 0.1640,  0.0279, -0.0476],
         [ 0.1162,  0.0174, -0.0807],
         ...,
         [-0.1278,  0.0167,  0.0486],
         [-0.1080, -0.0250,  0.0554],
         [-0.1370, -0.0105,  0.0763]],

        [[ 0.1114,  0.0138, -0.0990],
         [ 0.1001, -0.0168, -0.1053],
         [ 0.0589, -0.0406, -0.1200],
         ...,
         [-0.1057,  0.0176,  0.0521],
         [-0.0907, -0.0270,  0.0636],
         [-0.1165, -0.0093,  0.0822]],

        [[ 0.1070,  0.0188, -0.0953],
         [ 0.1020, -0.0098, -0.1017],
         [ 0.0599, -0.0352, -0.1202],
         ...,
         [-0.0835,  0.0226,  0.0529],
         [-0.0742, -0.0215,  0.0646],
         [-0.0928, -0.0066,  0.0769]],

        [[ 0.1476,  0.0343, -0.0367],
         [ 0.1250, -0.0059, -0.0411],
         [ 0.1030,  0.0008, -0.0632],
         ...,
         [-0.1145,  0.0479,  0.0729],
         [-0.0897,  0.0065,  0.0741],
         [-0.1197,  0.0214,  0.1007]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.1178, -0.0262, -0.0369],
         [ 0.1040, -0.0121, -0.0606],
         [ 0.1180, -0.0045, -0.0327],
         ...,
         [-0.0731, -0.0371,  0.1908],
         [-0.0727, -0.0317,  0.1964],
         [-0.0592, -0.0288,  0.2045]],

        [[ 0.0758, -0.0151, -0.0585],
         [ 0.0591,  0.0085, -0.0752],
         [ 0.0805,  0.0188, -0.0295],
         ...,
         [-0.0810,  0.0004,  0.1702],
         [-0.0772,  0.0053,  0.1813],
         [-0.0528,  0.0077,  0.1954]],

        [[ 0.0822, -0.0167, -0.0410],
         [ 0.0749,  0.0004, -0.0559],
         [ 0.0985,  0.0024, -0.0125],
         ...,
         [-0.0578, -0.0055,  0.1165],
         [-0.0539, -0.0035,  0.1278],
         [-0.0273, -0.0015,  0.1437]],

        [[ 0.0287, -0.0147, -0.0049],
         [-0.0082,  0.0076, -0.0343],
         [ 0.0359,  0.0089, -0.0029],
         ...,
         [-0.0576, -0.0235,  0.1125],
         [-0.0580, -0.0206,  0.1222],
         [-0.0493, -0.0173,  0.1341]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 3.4907e-02,  3.0279e-02,  6.6381e-03],
         [ 3.2730e-02,  1.5150e-03, -1.9794e-02],
         [ 5.9596e-02,  1.4336e-02, -9.5185e-02],
         ...,
         [-4.8987e-02, -1.1536e-02,  3.1165e-02],
         [-4.7936e-02, -1.3809e-02,  4.7573e-02],
         [-4.3452e-02, -1.1318e-02,  1.5574e-02]],

        [[-1.5176e-02,  1.9610e-02,  1.2881e-02],
         [-3.7669e-02,  7.0494e-03, -1.6397e-02],
         [ 8.2519e-03,  8.4411e-03, -1.1405e-01],
         ...,
         [-6.6457e-02, -2.9729e-02,  2.6020e-02],
         [-6.5735e-02, -3.2907e-02,  4.1785e-02],
         [-6.0520e-02, -2.6425e-02,  6.8625e-04]],

        [[-1.5882e-02,  3.4467e-02,  2.0432e-02],
         [-3.2385e-02,  2.9852e-02, -1.0695e-04],
         [ 9.5348e-03,  2.8028e-02, -1.0538e-01],
         ...,
         [-4.1346e-02, -2.8650e-02,  1.7840e-02],
         [-4.1547e-02, -3.3223e-02,  3.6171e-02],
         [-3.3477e-02, -2.3470e-02, -6.4849e-03]],

        [[ 2.4655e-02, -6.7324e-03,  6.1904e-02],
         [-1.9005e-02, -2.0474e-02,  1.9186e-02],
         [ 2.8675e-02, -1.9949e-03, -5.9633e-02],
         ...,
         [ 1.1735e-02, -7.5230e-03,  5.8100e-02],
         [ 1.3936e-02, -7.6384e-03,  7.3096e-02],
         [ 1.5479e-02, -5.5009e-03,  4.2431e-02]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[ 865, 1504, 1855,  235, 1730,  696, 1611, 1779,  226, 1137, 1137,   62,
         2327,  949, 1207,  836, 2131, 2131, 2131,  896, 1874, 1120,   13,  705,
         1086, 1458,   43, 2644, 1402,   92,  527, 1357,  570,  244, 1388, 2877,
         1841, 1837, 2877,  572, 1907, 1079, 1388, 2160,  965, 2062,  185, 2231,
         1995, 1026, 2901,  438, 1595, 2059, 2071, 2019, 2782, 1936,  512, 2429,
         2941,  459, 2941, 2941, 1837,  489,  368, 1267,  636,   89, 2933,  311,
         1991, 2386,  211, 1707, 2801, 2127, 1059,  456,  610, 1932, 1173, 1324,
         1459, 1801, 1095,   75,  477,   75,  477,  477, 1425, 1847, 1847,  368,
         1847, 2615, 1449, 1847, 2120, 1763,  518,  771,  609, 2523, 1194, 1170,
         1110, 1880, 1374, 2824, 2395, 2215,  669, 2783, 2406, 2783, 2120, 2528,
         1384,  104,  104, 1578,  104, 2272, 2792, 2402, 2272, 1962,  218, 1856,
         1962, 1706, 1880, 1909,  319, 1802,  319, 2342,  319, 1850, 2284, 2783,
         2783,  669,  651, 2272, 2272, 2765, 2599, 1909, 2368, 1706, 1191, 1788],
        [1928, 2407,  724, 2407,  536,  724, 2464, 2279,   14, 1334, 1334, 2407,
         2407,   14,  915, 2087, 2087, 1948, 2895,  369, 2264,  983,   11,   46,
         2878, 2381, 2850, 2764, 1778, 2797, 2850, 1648, 2267,  536,  536,  536,
          724,  536, 1008, 2411, 1679,  536,  536,  724,  536, 2464,   14, 1366,
         2763, 2503, 1405, 2264, 2850, 1634, 2821, 1336, 1952,  611,   87, 1122,
         2048, 2048, 2048,  910,  536,  536,    4, 1008,    4,  536,  273, 2732,
         2069, 2245, 2245,  828, 2464, 1366,  578, 1366, 1389, 2264,  416,  637,
         2456,  116, 2048, 1485, 2295, 1120, 2295, 2295, 1798, 2883, 2883,    4,
         2883, 2540, 1297,   53,  306, 1173, 1415,  123, 2542, 2542, 1769,  361,
         1856, 1087, 2398, 1443, 2056, 2961, 2872, 2961, 2872,  658, 2460, 1656,
         2287,  895, 1789, 1766,  663, 2359, 2669,  129, 2380, 2769,  545, 1286,
         1206, 1589, 1087, 2816, 2304, 1251, 2793, 2961, 2304,  651, 2532, 2532,
          651, 2056,  384, 2380, 2359,  577,  272,  603, 1383, 1407, 1251, 2816],
        [2427, 2175,  730, 1423, 1784, 1782, 2801, 1305,  303,  337,  337, 2175,
         2427,  303,  378, 2201, 2593, 1305, 1671, 2096,  182, 1894,  669,  524,
          621, 1194, 1824, 1282, 1081, 1285, 1282, 1081, 1403, 2121, 1379, 1816,
         1887, 1759, 2935,  595, 1508, 1508, 1103, 1782,  463,  595, 1076,  378,
         1055,  669, 1697, 2285,   14, 1485, 1024, 1548, 1081,  808, 1285, 1548,
         1008, 1024, 1008, 1522, 1543, 1628, 2951, 1816, 1804, 2863, 1076, 2720,
          985,  429, 2801,  904,  429,  912,  756,  429, 1697, 1485, 1477, 2338,
         1485, 2084, 2176,  232, 1522,  232, 1176, 1522, 1258, 2982, 1503, 1503,
         2982, 2561, 1258, 2621,  397, 1915,  223, 2412,  904,  912, 2626, 2116,
         1477, 2338, 2338,  232,  628, 2709,  293,  232,  442,  293,  397,  397,
         2466, 2993, 1895, 2598,  397, 2160, 1530, 2160, 2160, 2701, 2338, 2727,
         2701,  384,  384,  628, 2709,   57, 2709, 2626, 2709, 2709, 2904,  250,
         2709, 2709, 2709, 2160, 2701, 2931, 2931,  628, 2598, 2727,  250,  628],
        [ 626, 1884, 1645, 2911, 2911, 1273,   34, 1594,  626, 1884, 2911, 1768,
         1884, 2511, 1121, 2014, 1018,  184, 1884, 2511,  616, 2014,  228, 1884,
         1937, 2511, 2267,  184, 1018, 2296, 2267, 2187, 1645, 2267, 1273, 2924,
         1414, 2032, 1414, 1192,  441, 1998, 1219, 1645, 1311,  725, 1896,  246,
         1896,  626, 1930,  109,  549,  226, 1596,  441,  396,  289, 2201, 2225,
          748, 2870,  748, 1618, 2644,   26,   63, 1120, 2406,  348, 2133, 1398,
          909, 1182, 2133,  905, 1182, 1182, 1319,  319, 1717, 2497,  319,  909,
          400, 1396, 1738,    2, 1478,  454, 2985,   93, 1877, 2915, 1977,  945,
         2055, 2185, 1163, 1189, 1426, 1489, 2095, 1718,  777, 1489, 1292, 1303,
         1489, 1533, 1586, 2622, 1391, 1350, 1472, 1472, 1894, 1472, 2398, 2173,
          676, 2173,  979, 2025, 2042, 1021, 1718, 2190, 2991, 1514, 1533, 1522,
          392,  818,  235, 2226,   19, 1379, 1249, 2772,  951,  500, 1249, 1249,
         1286, 1149, 1286, 1730, 1265, 1265, 1046, 2308,  207, 1356, 1379, 2639]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0016, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[2057, 2752, 2752,  ...,  726,  726, 2777],
        [2407, 2639, 1927,  ..., 2384, 2340, 1476],
        [2427,  337, 1305,  ...,  384, 2338, 2116],
        [1150,  105,  919,  ..., 1590,  160, 2547]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0225, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2967,  494, 2877,  ...,  107, 1429, 2214],
        [1004, 1933,  536,  ..., 1588, 2462,  946],
        [2931, 2701, 1150,  ..., 1940, 1522, 2267],
        [ 348, 2889,   63,  ..., 2915, 1235,  666]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0008, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0113, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1037,  0.0332, -0.0651],
         [ 0.0973,  0.0076, -0.0693],
         [ 0.0436, -0.0256, -0.0921],
         ...,
         [-0.0431,  0.0805,  0.0877],
         [-0.0388,  0.0218,  0.1019],
         [-0.0556,  0.0492,  0.1155]],

        [[ 0.1415,  0.0341, -0.0877],
         [ 0.1302, -0.0006, -0.0887],
         [ 0.0920, -0.0190, -0.1056],
         ...,
         [-0.1219,  0.0162,  0.0532],
         [-0.1068, -0.0256,  0.0594],
         [-0.1317, -0.0089,  0.0821]],

        [[ 0.1354,  0.0365, -0.0896],
         [ 0.1294,  0.0039, -0.0941],
         [ 0.0759, -0.0215, -0.1126],
         ...,
         [-0.1031,  0.0222,  0.0544],
         [-0.0914, -0.0228,  0.0622],
         [-0.1133, -0.0031,  0.0822]],

        [[ 0.1019,  0.0075, -0.0908],
         [ 0.0825, -0.0281, -0.0988],
         [ 0.0492, -0.0468, -0.1125],
         ...,
         [-0.1242,  0.0179,  0.0538],
         [-0.1091, -0.0245,  0.0612],
         [-0.1340, -0.0069,  0.0826]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0239, -0.0065, -0.0565],
         [ 0.0064,  0.0098, -0.0749],
         [ 0.0080,  0.0112, -0.0223],
         ...,
         [-0.0456, -0.0296,  0.1460],
         [-0.0451, -0.0271,  0.1551],
         [-0.0329, -0.0246,  0.1667]],

        [[ 0.1046, -0.0351, -0.0452],
         [ 0.0685, -0.0043, -0.0784],
         [ 0.0982,  0.0059, -0.0306],
         ...,
         [-0.1087, -0.0250,  0.1710],
         [-0.1062, -0.0205,  0.1769],
         [-0.0843, -0.0180,  0.1859]],

        [[ 0.0940, -0.0479, -0.0121],
         [ 0.0900, -0.0324, -0.0346],
         [ 0.1006, -0.0243,  0.0085],
         ...,
         [-0.0955, -0.0192,  0.1647],
         [-0.0933, -0.0138,  0.1728],
         [-0.0689, -0.0124,  0.1849]],

        [[ 0.0334, -0.0151, -0.0466],
         [-0.0174,  0.0196, -0.0520],
         [ 0.0172,  0.0247,  0.0014],
         ...,
         [-0.1023, -0.0108,  0.1847],
         [-0.0966, -0.0059,  0.1955],
         [-0.0757, -0.0039,  0.2074]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0332, -0.0034,  0.1058],
         [ 0.0085, -0.0179,  0.0940],
         [ 0.0286, -0.0088,  0.0062],
         ...,
         [ 0.0277, -0.0159,  0.1089],
         [ 0.0314, -0.0165,  0.1240],
         [ 0.0329, -0.0144,  0.0950]],

        [[ 0.0292,  0.0539,  0.0519],
         [ 0.0054, -0.0038, -0.0182],
         [ 0.0429,  0.0097, -0.1124],
         ...,
         [-0.0758, -0.0374,  0.0478],
         [-0.0733, -0.0394,  0.0547],
         [-0.0717, -0.0345,  0.0300]],

        [[ 0.0177,  0.0232,  0.0607],
         [-0.0055,  0.0208,  0.0365],
         [ 0.0314,  0.0185, -0.0708],
         ...,
         [-0.0757, -0.0332,  0.0277],
         [-0.0705, -0.0376,  0.0379],
         [-0.0704, -0.0306,  0.0118]],

        [[ 0.0083, -0.0073,  0.0720],
         [-0.0452, -0.0328,  0.0254],
         [-0.0056, -0.0115, -0.0817],
         ...,
         [-0.0379, -0.0178,  0.0753],
         [-0.0353, -0.0188,  0.0831],
         [-0.0316, -0.0172,  0.0573]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[1110, 2090, 2751,  320,  391, 2751, 1288,  249,  778,  472,  472, 2090,
         2431,   27, 2540, 1172, 1214, 1214,  559,  340,  334, 1451, 2441,  693,
          145, 2622, 1642, 2001,  216, 1934, 1536,    2, 1452, 2677, 2746, 1640,
         2115,  240,  602,  905, 2659, 2702,  671, 2959,  505,  357, 1804, 2612,
         2974,   30, 2185, 1453,  966, 1952, 1247, 2365,    2,  745, 2899, 1247,
          540, 2717,  540,  921, 1377,  138, 1629,  369, 1629,  539, 1400, 2579,
         1186, 1888,  506,  711,  711, 1495, 2231, 1495, 2439, 2185, 2439,  652,
         2000, 2262, 1578,  604, 2870, 2824, 2870, 2870, 1086,  116,  116, 2494,
         1895,  177,  989,  428, 1255, 1884, 1442, 1083, 2265, 2265, 1036, 1643,
         2503, 1360,  652,  548, 1752, 1411, 1116, 2083,  552, 1116, 1003, 1003,
         1947, 2362,  992, 1130, 2181, 1348, 1083, 1079, 2883, 1076, 1036, 2941,
         2782,  178, 1360, 2706,  270,  623, 1865,  630,  473, 2635, 1865, 2635,
         2415, 2083, 1063, 2883,  496, 1371, 1973,  623, 2845, 1889, 2792,  251],
        [2971, 1054, 1815, 1815, 2344, 1815,  626, 2069,  626, 1918, 1815, 1815,
         1815, 2069, 2284, 2284, 1918, 2850, 2850, 2284, 1951, 2146, 1413, 1413,
          611,  611, 1439, 1439, 1659, 2834, 1659, 2318, 2224, 1815, 2258, 2078,
         2396, 1589, 1222, 1548, 2052,  626,  594, 1815, 1436,  590,  590,  590,
         2284, 1951, 2146, 2146,  726,  726, 2318, 2834, 2318,  156, 2318,  156,
          156,  156,  156, 1895, 1810,  469, 2048,  833,  972, 2382, 2901, 2901,
          590, 2901,  590, 2901,  590,  590,  590,  590, 2146, 2146,  509,  726,
          726,  726, 2009,  156,  646,  156,  646,  646, 1341, 1326, 2342, 1326,
         2715,  590,  808, 1313, 1269, 2901,  590,  726,  806,  806,  726,  726,
          726,  726,  726,  571, 2009,  156,  646,  646,  646,  646, 1269, 1269,
          806, 1921, 1921, 1019, 1921, 1019,  726, 1921, 1921, 1019,  726,  726,
         2009,  726, 2009, 2009,  571,  571,  571,  571,  571,  646,  646,  646,
          646,  646, 2017, 1019, 1019, 2009, 1019, 2009, 1805, 2009,  571, 2397],
        [2390, 2390, 1036, 2419, 2784, 1646, 1829, 2208, 2419, 2419, 2419, 2419,
         2419, 2419, 1829, 2419,  448,  448,  448, 2352,  448,  312,  312,  312,
          312,  312, 2282,  312,  312, 1922, 2282, 2282, 1922, 2431,  246, 2242,
         1324, 2363,  340, 1829, 2419,  658,  246, 2811, 2452, 1829, 2219, 1829,
         2219, 2219, 1829, 1264, 2219, 1264, 1922, 2173,  770,  667, 2694, 1434,
         1434,  667, 1955, 1955, 1601,  228,  158, 1601, 1147,  228, 2219, 1397,
         2219, 2927,  641, 2927, 2927, 1300, 1829,  916,  916, 2129,  916, 2129,
         2129, 2129, 1375,  508, 2854,  667, 2854, 2854,  770,  158,  158,  158,
          982, 2219, 2173,  787, 1191, 2927,  641,  916, 2414, 2414,  715, 1829,
          916, 2129, 2129,  770,  715,  770, 2344, 1912,  921, 2344,  770, 1191,
         2927,  715,  715, 1191, 1191, 2129, 1264, 2129, 2129, 1191, 1264, 2129,
         1191, 2129, 2129,  715,  770,  770, 1375, 1375, 1375, 1912, 1375, 1912,
          770, 1912, 1912, 2129, 1191,  715,  715,  715,  770, 2129,  770,  715],
        [ 620,  472, 1346,  472, 1346,  472, 1881, 1190,  620,  301,  301,  472,
          472,  620, 2986,  783,  781, 1375, 1683,  512, 1800, 2645, 2575,  781,
         2402,  360,  630, 2389, 2223,  451, 2304, 1803,  993, 1346, 1346, 1346,
         1346, 2282, 1346,  152,  620, 1617, 1346, 1346, 1346, 2937,  779,  230,
          767, 1729, 1503, 2562, 2402,   67, 2792, 2265, 2763, 1227, 2792, 1803,
         2627, 1276,  828, 2506, 1346, 2375, 2282, 1346, 2282, 2375, 2727,  409,
         1829, 1703, 1809, 1515, 2433, 2224, 1285,  182, 1515, 2761, 2224,  445,
         1204,  508, 2732,  228, 2205, 1371,  331, 1371,   60, 1610, 1036, 2282,
         2282,  261, 1072,  309,   60,  689, 2044, 1796, 1504,  739,  892,  739,
          969, 2104,  885,  695, 1413, 1447,  695, 2728, 1447, 2728,  702,  627,
         1015,  365, 2827,  923,  470,  373,  261, 2557, 2079, 1030, 2222, 1337,
         1304,   44, 2997, 2703, 1906, 1744, 1929, 1988, 1906,  345, 1929, 1929,
          437, 2728, 2728, 2960,  417,  690, 1789, 2117,  757, 2245, 1744, 2117]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0016, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[1589,  414,  996,  ..., 2815, 2815, 2212],
        [1918, 1918, 2018,  ..., 2017, 2017,  646],
        [ 448, 2352,  448,  ..., 2129, 1264,  916],
        [2199, 1346, 2333,  ..., 2104, 2104, 2551]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0248, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2626, 1978,   10,  ..., 2456,  652, 2184],
        [2146, 2902, 2833,  ...,  314,  314,  314],
        [2129,  715,  372,  ...,  313,  977,  817],
        [2399,  311, 1346,  ..., 1288, 1650,   92]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0008, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0128, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.0586, -0.0274, -0.0571],
         [ 0.0305, -0.0541, -0.0646],
         [ 0.0307, -0.0500, -0.0752],
         ...,
         [-0.0901,  0.0625,  0.0931],
         [-0.0712,  0.0243,  0.0939],
         [-0.1026,  0.0399,  0.1152]],

        [[ 0.0866, -0.0263, -0.0865],
         [ 0.0672, -0.0602, -0.0866],
         [ 0.0412, -0.0668, -0.0996],
         ...,
         [-0.1307,  0.0116,  0.0479],
         [-0.1127, -0.0289,  0.0528],
         [-0.1392, -0.0112,  0.0783]],

        [[ 0.1121, -0.0086, -0.0818],
         [ 0.0951, -0.0483, -0.0818],
         [ 0.0645, -0.0504, -0.0964],
         ...,
         [-0.1290,  0.0049,  0.0473],
         [-0.1149, -0.0319,  0.0525],
         [-0.1370, -0.0202,  0.0752]],

        [[ 0.1104, -0.0119, -0.0698],
         [ 0.0801, -0.0555, -0.0715],
         [ 0.0561, -0.0549, -0.0883],
         ...,
         [-0.1438,  0.0108,  0.0496],
         [-0.1229, -0.0279,  0.0516],
         [-0.1508, -0.0136,  0.0767]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0984,  0.0789,  0.0474],
         [-0.1012,  0.0836,  0.0453],
         [-0.0496,  0.0711,  0.0567],
         ...,
         [-0.0831,  0.0027,  0.1223],
         [-0.0768,  0.0104,  0.1328],
         [-0.0613,  0.0135,  0.1433]],

        [[-0.0763,  0.0349, -0.0414],
         [-0.0977,  0.0711, -0.0225],
         [-0.0396,  0.0559,  0.0029],
         ...,
         [-0.1070, -0.0049,  0.1386],
         [-0.1057, -0.0004,  0.1494],
         [-0.0887,  0.0039,  0.1600]],

        [[ 0.0154, -0.0226, -0.0525],
         [-0.0437,  0.0140, -0.0782],
         [ 0.0080,  0.0240, -0.0325],
         ...,
         [-0.0922, -0.0217,  0.1189],
         [-0.0868, -0.0184,  0.1225],
         [-0.0693, -0.0136,  0.1317]],

        [[-0.0374,  0.0102, -0.0587],
         [-0.0900,  0.0543, -0.0522],
         [-0.0399,  0.0538, -0.0186],
         ...,
         [-0.0963, -0.0033,  0.1149],
         [-0.0935,  0.0020,  0.1173],
         [-0.0803,  0.0069,  0.1252]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.1108,  0.0105,  0.0695],
         [-0.1300,  0.0131,  0.0765],
         [-0.0841,  0.0195, -0.0263],
         ...,
         [ 0.0101,  0.0180,  0.1066],
         [ 0.0184,  0.0191,  0.1168],
         [ 0.0120,  0.0192,  0.0934]],

        [[-0.1189, -0.0348,  0.0423],
         [-0.1554, -0.0030,  0.0389],
         [-0.1152,  0.0031, -0.0691],
         ...,
         [-0.0932, -0.0370,  0.0386],
         [-0.0886, -0.0384,  0.0460],
         [-0.0899, -0.0356,  0.0240]],

        [[-0.0334, -0.0492,  0.0224],
         [-0.1073, -0.0428,  0.0112],
         [-0.0686, -0.0242, -0.0987],
         ...,
         [-0.0745, -0.0499,  0.0312],
         [-0.0730, -0.0506,  0.0424],
         [-0.0707, -0.0481,  0.0162]],

        [[-0.0655, -0.0370,  0.0251],
         [-0.1429,  0.0109,  0.0156],
         [-0.1053,  0.0170, -0.0743],
         ...,
         [-0.0919, -0.0178,  0.0253],
         [-0.0869, -0.0216,  0.0404],
         [-0.0875, -0.0153,  0.0063]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[ 769, 2976, 2976, 2976,  606, 2976, 2573,  769,  769, 2976, 2976, 2976,
         2976,  769, 1874,  769,  769,  769, 2976, 2628, 2628, 1524, 2440, 2976,
         2440, 2266, 2440, 2440, 2440, 2440, 2440, 1524,  370, 1078, 2953, 1078,
          606,  799, 1078,    2,  769, 2017, 2953, 2976,  769, 2737, 1058, 2904,
         2628, 2628,  826, 1147,   70, 1719, 1524, 2750, 1524,  510, 1524, 1524,
         2440, 2286, 1524,  426, 1711, 1711, 1711, 1550, 1711, 2410,  309, 1559,
         1232, 2594,  350, 2656, 2656, 2823, 2904, 2823, 1874, 1906, 1874,  440,
         1423, 1906,   13, 1490,   92,  813, 2451, 1834,  223,  447,  447,  447,
          447,  849, 1232,  447, 2930, 1606, 2447,  457, 1025, 1025, 1145, 2808,
          132, 2196, 1757, 1575,  714, 2196,  989,  496,  615,  496,  447, 1444,
         2607,  294,  488,  953,  442, 2500, 2033, 2043,  188, 2950, 1707,  425,
         2228,  900, 2173, 1873, 2716, 1818, 1027, 2903,   98, 2425,  143, 1029,
          264, 1148, 2672,  676,  895, 2686, 2140,  924, 1213, 1285, 1818, 2309],
        [ 539,  539,  903, 1906,  539,  903, 2161,  539,  539, 2617, 2617, 2617,
         2617,  539, 1924, 2380,  809,  474, 2617, 2672, 2431,  942,  809, 1326,
         2059,  809, 2059,  283, 1648,  707, 2682, 2165,  836,  539,  903,  903,
          903,  903,  903, 2202,  539,  405,  903,  903,  539,  559, 2505, 2514,
         2140, 2431,  672, 2452, 1091,  810, 1770, 1932, 2251, 2644, 1770, 1770,
          794,  794,  794,  794, 1600,  903,  903,  903,  903, 1600, 2140, 2140,
          804, 2859,   30, 1301,  460, 2047, 2133, 2091, 2219, 1864,   63, 2666,
          642,  106,  832, 2772, 2772, 2772, 2772, 2772, 1818,  903,  903,  903,
         1558,  804, 1818, 2755,  303,  878,  179,   12, 1952, 1536, 2240, 1463,
         1871, 2799,  467, 1855, 2644, 2772,   27,  655, 1565,  655, 2182, 2118,
           12,  182, 2928, 2429, 2118, 2264,   12, 1973, 2928, 2264,  524, 2264,
         2264,  221,  221, 1909,  485,  485,  485, 1043,  485,   27,   27,  627,
          655,  627, 2918, 2264, 2264, 2779,  485, 1909, 2779, 1909,  485, 1322],
        [1976, 1976,  504,  504, 1976, 1479, 2181, 1976, 1976, 2719, 1778, 1084,
         1891, 1976,  447, 1621, 1778, 1778, 1778, 1778,  571,  797, 1549, 1778,
         1965, 2336, 2336, 1965, 2304, 1202,  714, 2860, 2032,  504,  968,  879,
          879,  879,  879,  627, 1976,  471,  968,  504,  968, 2477, 1148, 2259,
         1793,  571, 1742, 2631,  186,  196, 2930, 2032, 2826, 2992,  590, 1907,
         2214, 2688, 2214, 1532,  879,  879,  879,  879,  879,  879,  694,  879,
          879, 2233, 2233,  737, 2117, 2407, 2148, 2220,  484, 2956, 1709, 1684,
         2178, 2291,  813,  214, 2266, 1719, 1837,  442,  879,  879,  879,  879,
          879,  879,  879,  879,  879, 1072, 1072, 1870, 1121, 2363, 1870,  108,
         2291,  882, 1701,  665, 2177, 2153,   48,  648, 2765, 2511,  879,  879,
          879,  884, 1870, 1870,  879, 1420, 1870, 2761, 1805, 2083, 1506, 1420,
         2761, 1060, 1060,  622, 1386, 2083, 1386, 1782, 2083, 2115, 1909, 1557,
          966, 1548,  430, 1420, 2761,  622, 2067,  307, 2083, 1453,  307, 2067],
        [ 570,   49, 2610, 1422, 2288, 2369,  316, 2833, 2313, 2753, 2753, 1422,
         2210,  176,  598,  289, 2178, 2178, 2360, 1952,  828,  420, 1908,    8,
         1937, 2738,  595, 2392,  605, 1550, 2392, 1146, 1937, 2756, 2251, 1942,
         2153, 1644, 1726,  801, 2313,  901, 2117, 2610, 1323, 2364, 1884,  939,
          497, 1609, 1758, 2520,  645, 2512, 1296, 2392,  989,  885,  739, 2294,
         1550,  739,  375, 1296, 2624,   96, 1004, 1726, 1962, 1962, 1829,  694,
         1022, 1089,  721, 2689,  943, 2118, 2307, 1652,  704, 1523,  704, 1523,
          989,  704,  989,  989, 1550, 1079, 2120, 1221, 1430, 1176,  616,  891,
          534, 1022,  593, 1487,  115,  829,    7, 1355, 1279, 2376, 1355,  958,
          704, 1722, 1523,  793,  989,  366, 2207, 1014, 1014, 1667,  659, 2814,
         2185, 2393, 1879, 1018, 1258, 2357, 1355, 2378, 2780, 1927,  119, 1799,
          341, 1799, 1722, 1799, 1320, 1320,  879, 1722, 2190,  879,  879, 1320,
         2190, 2190, 1320, 2357,  873, 1927,  662,  879, 2317,  135, 1320, 1262]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0015, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[2162,  568, 1435,  ...,  143, 1029,  757],
        [2046, 1364,   12,  ...,   27, 1134, 1714],
        [ 879,  879,  879,  ..., 2772,  783, 1231],
        [1365, 1583, 1275,  ...,  341,  341, 1722]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0250, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[1891, 1411, 2641,  ...,  830, 1416, 1569],
        [ 485, 1909, 2997,  ...,  948,  948,  948],
        [ 910, 2083,  879,  ...,  665,  665, 1378],
        [ 884,  135, 1258,  ...,  564,  564, 2256]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0083, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.0864, -0.0084, -0.0761],
         [ 0.0792, -0.0316, -0.0778],
         [ 0.0295, -0.0623, -0.0908],
         ...,
         [-0.0986,  0.0237,  0.0648],
         [-0.0907, -0.0176,  0.0720],
         [-0.1169, -0.0053,  0.0846]],

        [[ 0.1377,  0.0337, -0.0433],
         [ 0.1416,  0.0075, -0.0428],
         [ 0.1027,  0.0039, -0.0665],
         ...,
         [-0.1379,  0.0127,  0.0521],
         [-0.1176, -0.0224,  0.0567],
         [-0.1479, -0.0106,  0.0782]],

        [[ 0.1449,  0.0150, -0.0610],
         [ 0.1295, -0.0230, -0.0628],
         [ 0.0958, -0.0285, -0.0802],
         ...,
         [-0.1352,  0.0098,  0.0517],
         [-0.1179, -0.0273,  0.0554],
         [-0.1436, -0.0135,  0.0787]],

        [[ 0.0807, -0.0273, -0.0846],
         [ 0.0666, -0.0596, -0.0852],
         [ 0.0284, -0.0761, -0.1014],
         ...,
         [-0.1138,  0.0083,  0.0534],
         [-0.1007, -0.0294,  0.0570],
         [-0.1237, -0.0154,  0.0811]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0384,  0.0353, -0.0746],
         [-0.0471,  0.0514, -0.0773],
         [-0.0435,  0.0559, -0.0169],
         ...,
         [-0.0974,  0.0007,  0.1247],
         [-0.0972,  0.0054,  0.1390],
         [-0.0823,  0.0100,  0.1526]],

        [[ 0.0597, -0.0084, -0.0724],
         [ 0.0386,  0.0110, -0.1039],
         [ 0.0589,  0.0136, -0.0581],
         ...,
         [-0.0931, -0.0240,  0.1566],
         [-0.0938, -0.0208,  0.1582],
         [-0.0807, -0.0172,  0.1648]],

        [[-0.0020,  0.0048, -0.0981],
         [-0.0538,  0.0380, -0.1119],
         [-0.0056,  0.0379, -0.0707],
         ...,
         [-0.1165, -0.0036,  0.1025],
         [-0.1132,  0.0022,  0.1081],
         [-0.0978,  0.0067,  0.1197]],

        [[-0.0269,  0.0238, -0.0909],
         [-0.0521,  0.0544, -0.0891],
         [-0.0192,  0.0559, -0.0440],
         ...,
         [-0.0991,  0.0096,  0.1102],
         [-0.0962,  0.0127,  0.1190],
         [-0.0774,  0.0166,  0.1304]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-6.2621e-02, -3.6690e-02,  5.2556e-02],
         [-9.6502e-02, -2.2751e-02,  3.5022e-02],
         [-8.7532e-02,  4.8078e-03, -5.1126e-02],
         ...,
         [-4.9244e-02, -2.7638e-02,  7.6584e-02],
         [-4.4889e-02, -2.9844e-02,  9.2553e-02],
         [-4.5120e-02, -2.6165e-02,  5.8099e-02]],

        [[-2.2720e-03, -2.9308e-02,  4.0015e-02],
         [-4.5148e-02, -2.6280e-02,  1.7222e-02],
         [ 3.2649e-03, -1.7316e-02, -7.5339e-02],
         ...,
         [-8.6908e-02, -5.6648e-03,  3.7807e-02],
         [-8.6049e-02, -6.7949e-03,  4.7331e-02],
         [-8.2615e-02, -5.4330e-03,  2.3497e-02]],

        [[-5.6089e-02, -2.6139e-02,  4.6049e-02],
         [-1.2107e-01, -5.9577e-03,  3.5980e-02],
         [-7.8765e-02,  5.6729e-03, -6.4397e-02],
         ...,
         [-1.2605e-01,  9.8529e-04,  1.8149e-02],
         [-1.2158e-01, -1.0786e-03,  2.4272e-02],
         [-1.2292e-01,  1.4958e-03,  2.0759e-03]],

        [[-7.4748e-02, -3.5393e-02,  4.2539e-02],
         [-1.2386e-01, -1.6213e-02,  3.5184e-02],
         [-8.8529e-02, -1.0053e-04, -7.5565e-02],
         ...,
         [-1.0915e-01, -3.0613e-02,  3.2943e-02],
         [-1.0688e-01, -3.4344e-02,  4.4355e-02],
         [-1.0468e-01, -2.8586e-02,  1.4176e-02]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[ 576,  960, 2125,  657, 1830, 1691, 1428, 1405, 1736, 1243, 1243, 1760,
         2716,  576, 2391, 2391, 2391, 2391, 2391, 2391, 2391, 2426,  844,  966,
         2952, 2952, 2249,  638,  565, 1377, 2261, 1682, 2457, 2565, 2517,  994,
         2787, 2727, 2787, 1736,  960,  540,   64, 2308, 2709, 1243, 1736, 2391,
         1243, 2952, 2952, 2952, 2457, 1377, 1828,  836, 1501,  307, 1501,  361,
          361,  307,  307, 1989, 2654, 1148,  613, 2787, 1858, 1414,  619, 1708,
         2709, 1736, 1736, 1243, 1243, 2391, 2391, 1243, 1130, 1130, 1130,  611,
          611, 1496,  592, 2576, 1989, 2576, 1989, 1989, 2935, 1595, 2860, 1595,
           70,  619, 1307, 1521, 1621,  619, 1736, 1719, 1243, 1243, 1496, 1496,
          854,  611,  611, 2162,  611, 2162, 1634, 1692, 1634, 1634, 2110, 2066,
         2745, 2469, 2469, 2301, 1521, 2469, 1719, 2558, 2469,  549, 1496,  236,
         1719,  236,  611,  611, 1692,  601, 1692, 1692, 1692, 1692, 1692, 1692,
         1692, 1692, 1692, 2193, 1338,  858,  549,  601,  760,  601, 1692, 1692],
        [1319, 1101,  533, 1393, 2700, 1489, 1996, 1828,  960,  421, 1613,  960,
          363, 1393,  964, 1173,  659,  659,  638, 2389, 1265, 2652,  496, 1730,
         2224, 1416, 1525, 2907, 1095, 2356, 2091,  643, 1110, 2685, 1714,  557,
          557, 1179,  557, 2827, 1489,  221, 1714, 1631,  747,  156, 1489, 1068,
         1508, 2707,  486, 2583,  691, 2446, 1263, 2274, 1082,  242, 1529, 1380,
         1595, 1595, 1417, 1206, 2137, 2244, 2417,  557, 2417, 1605, 1132, 1132,
         2387, 1262, 1262,  156,   66,  273,  257, 1146, 1957, 1674, 1957, 2779,
          641,  612, 1672, 2796, 1141, 1754, 1141, 2351, 1446, 1605, 2417, 2417,
         1878, 2144, 1739, 1410, 1410,  606, 1758, 1845, 1127, 2603,  819,  972,
         2457, 1512,  240, 2660, 1391,  330,  150, 2025, 2351, 1785, 1410, 1410,
          515, 2856, 1795,  943, 2080,  713, 1308, 1640, 1795, 2523,  483, 1460,
          713, 1466, 1893, 2346,  808,   24, 2727, 2411,  808, 2636,  892, 2507,
         2288,  150, 1937, 1640,  791, 1747,  653,  949,  566, 2823,   24, 1456],
        [1024,  471, 1074, 2021, 1240, 2649, 1485, 1416, 1667, 2002, 1687, 2021,
         2002, 2572,  633, 2121,  960,  642,  856, 1530, 2516, 1465,  248,  492,
         2228, 2354, 2228, 2078, 2829, 1813,  473, 1813, 1904,  390,  320, 1167,
         1237,  356, 1518,  264, 1780,  554,  914,  336, 2153,  122,  770,   10,
           10, 2516,  110,  110, 1697, 2130, 1961,  955,  955, 1896, 1961, 1516,
          299, 1881,  299,  388, 2442, 2211,  502, 2675, 2495, 2521, 2180,  703,
          256, 1415,  987,  122,  655, 1663, 2452, 1663,  128,  128, 2460,  210,
         1345,  311, 1345,  781,  388, 2873,  388,  714,   62,  258,  841, 1353,
         1203, 1140, 2660, 2406, 2965,  256, 1295, 2319, 1428,  923, 1661,  126,
          311,  772, 2190, 2900, 1345, 1026, 2816,  620,   91,  745, 1220, 1384,
         1608, 2284, 2284, 2822, 2284,  287, 1338, 2357, 1785, 2895, 2298, 2136,
         2895,   51, 2900, 1541,  601, 1434, 2196, 1026, 2196,  935,  704,  704,
         1268,  745, 1092,  287,  287,  378,  542, 1766, 2476, 2275, 2447, 1009],
        [1291, 1200,  933, 2557,  198, 1989, 1419,  841, 1113, 2488,  998, 1989,
         1106, 2518,    6, 1033, 2361, 1908,   25, 1217, 2400, 2667, 2627,    4,
         1273, 2767,  296,  296,  813,  163, 1529,  889,  102, 2058,  933,  706,
         2586, 2280,  706,  538, 2518, 2309,  706,  933, 2058,  201, 1679, 2972,
         1434, 1601, 2569,  187,  349, 2019, 2517, 1175, 2404, 2127, 1962, 2735,
         1286, 1067, 1669, 2744,  885, 2706, 2120, 2093, 2706, 2417, 1221, 1536,
         1992,  595, 1740,  201,  407, 2306,  721, 2306, 1890, 1890, 1547,  117,
          605, 2810, 1386, 1211, 1491, 1211, 1491, 1491,   68, 2417, 2417, 2547,
         2196, 2010, 2313, 1433, 1494,   12, 2223, 1029, 2638, 1805,   91, 1921,
         1213, 1981,  362, 1129, 1186, 1129, 1259, 1259, 1071, 1259, 1433, 1974,
          602, 1433, 1433, 1433, 1433, 2630, 2707, 2102, 1433, 1691,  283,  463,
         1732, 1225,  666, 1514, 2733, 1166,  666, 1129, 1241, 1259, 1259, 1259,
         1259, 1259, 1259, 2630, 1433, 2887, 2711, 1308, 2161,  825, 1056, 1166]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0015, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[ 599, 1580, 2558,  ..., 1692, 1692, 1692],
        [1692, 2124, 1692,  ..., 1162, 1162, 2270],
        [1651,  739,  544,  ..., 1231, 1231, 1268],
        [ 572, 2839, 1737,  ...,  666,  666, 1186]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0235, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2821,  858, 1621,  ...,  611,  611, 1496],
        [ 775,  416,  294,  ..., 1772, 2036,  524],
        [1049, 2136, 2682,  ...,  378, 2136,  378],
        [2867, 1668, 1433,  ..., 2953, 2953,  795]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0084, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.0883, -0.0220, -0.0773],
         [ 0.0708, -0.0580, -0.0792],
         [ 0.0365, -0.0742, -0.0935],
         ...,
         [-0.1034,  0.0110,  0.0569],
         [-0.0934, -0.0255,  0.0572],
         [-0.1121, -0.0120,  0.0817]],

        [[ 0.0896, -0.0225, -0.0814],
         [ 0.0746, -0.0569, -0.0805],
         [ 0.0358, -0.0732, -0.0960],
         ...,
         [-0.1072,  0.0111,  0.0559],
         [-0.0955, -0.0254,  0.0587],
         [-0.1165, -0.0131,  0.0822]],

        [[ 0.1029, -0.0208, -0.0773],
         [ 0.0805, -0.0578, -0.0798],
         [ 0.0450, -0.0707, -0.0941],
         ...,
         [-0.1076,  0.0104,  0.0554],
         [-0.0963, -0.0261,  0.0578],
         [-0.1155, -0.0138,  0.0806]],

        [[ 0.0837, -0.0254, -0.0583],
         [ 0.0551, -0.0634, -0.0658],
         [ 0.0304, -0.0700, -0.0798],
         ...,
         [-0.1211,  0.0240,  0.0615],
         [-0.1032, -0.0132,  0.0655],
         [-0.1322, -0.0005,  0.0870]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0069,  0.0273, -0.1308],
         [-0.0390,  0.0607, -0.1384],
         [-0.0050,  0.0701, -0.0833],
         ...,
         [-0.0927,  0.0124,  0.0540],
         [-0.0893,  0.0147,  0.0654],
         [-0.0694,  0.0171,  0.0781]],

        [[-0.0030,  0.0241, -0.1289],
         [-0.0359,  0.0530, -0.1316],
         [-0.0098,  0.0595, -0.0774],
         ...,
         [-0.0948,  0.0063,  0.0760],
         [-0.0915,  0.0093,  0.0869],
         [-0.0730,  0.0118,  0.0978]],

        [[-0.0050,  0.0291, -0.1350],
         [-0.0579,  0.0659, -0.1379],
         [-0.0245,  0.0712, -0.0819],
         ...,
         [-0.0912,  0.0152,  0.0507],
         [-0.0885,  0.0180,  0.0611],
         [-0.0704,  0.0216,  0.0730]],

        [[-0.0928,  0.0685, -0.0930],
         [-0.1419,  0.0986, -0.0510],
         [-0.0888,  0.0822, -0.0291],
         ...,
         [-0.1161,  0.0145,  0.1039],
         [-0.1176,  0.0196,  0.1188],
         [-0.1088,  0.0226,  0.1311]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0829, -0.0237,  0.0183],
         [-0.1279, -0.0054,  0.0151],
         [-0.0940,  0.0158, -0.0895],
         ...,
         [-0.0962, -0.0345,  0.0281],
         [-0.0932, -0.0387,  0.0447],
         [-0.0926, -0.0326,  0.0095]],

        [[-0.0708, -0.0317,  0.0275],
         [-0.1132, -0.0220,  0.0277],
         [-0.0835, -0.0054, -0.0783],
         ...,
         [-0.1058, -0.0449,  0.0377],
         [-0.1032, -0.0490,  0.0512],
         [-0.1016, -0.0432,  0.0195]],

        [[-0.0959, -0.0246,  0.0057],
         [-0.1451, -0.0023,  0.0267],
         [-0.1085,  0.0138, -0.0745],
         ...,
         [-0.1226, -0.0290,  0.0140],
         [-0.1183, -0.0330,  0.0276],
         [-0.1181, -0.0275, -0.0071]],

        [[-0.1384,  0.0033,  0.0308],
         [-0.1638,  0.0265,  0.0576],
         [-0.1284,  0.0294, -0.0205],
         ...,
         [-0.0733, -0.0075,  0.0590],
         [-0.0686, -0.0091,  0.0749],
         [-0.0708, -0.0070,  0.0470]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[2550, 1843, 1020, 1020, 1020, 1020, 2136, 1662, 1786, 1843, 1843, 1020,
         1023, 1786,  511,  942,  941, 1104, 2976, 1946,  964, 2597,  785,  676,
         2955,  992, 2955,  405, 1758,  740, 2969, 2917, 2380, 1202, 1020, 2356,
         1020, 2356, 1020,  294, 1395, 2692, 1020, 1020, 1202, 2136,   66, 2135,
          516, 1504, 1737, 2037, 1230, 1820,  123, 1237, 1130,  790, 2137,  877,
         2410, 1832, 2172, 2907,  625,  625,  522, 2356,  522,  625,  404,  553,
         1748, 2196,  525, 2136,   53, 2598, 2590, 2611,  700, 1846, 1846, 1390,
          594, 2741, 1699,  186,  142,  249, 1650,  797,  553,  622,  622, 2195,
          622, 1748,  625, 1510, 1335, 1748, 2051,  383, 1947,  488, 2395, 1422,
          323,  592,  627, 1634,  592, 2701, 2916,  637, 1027,  637, 2802,  358,
         1286,  429,    3,  510,  510,  955, 2648, 2040, 1356, 2280, 1278, 2202,
         2094, 2704,  592, 1219, 2078,  437,  637, 2701, 1634, 2916,  637,  637,
          637, 1027,   73,  961, 2820, 1501, 1029,  138, 2241, 1501,  437,  138],
        [ 596, 1254, 1724, 1254, 1254, 1499, 2445,  596,  596, 2465, 2465, 1254,
         2465,   77, 2653,  280, 2713, 2663, 1476,  531, 2713, 1927,  607, 2515,
         2120, 1358, 2763, 1927,  759, 1757, 2004,   32, 1890, 2585, 1612, 2050,
         2092,  923, 2092,  596,   77, 2965, 1397, 1499, 1035, 1551,  789,  118,
           77,  872, 1268, 2192,  206,  214,  696, 2952, 1299, 2674,  651, 2614,
         2077, 1063,  907, 1200, 1909, 1697, 2168, 2092, 1697, 1661,  115, 1369,
         1496,  511,  564, 1551,  836, 1917, 2293, 1917,  832, 1432,  832, 1502,
         2298, 2348, 2272, 2045, 1089, 2045, 1089,  191,  912, 1768, 1768,  595,
          965, 2787, 1070, 2329, 1970, 2787,  657,  665,  851,  851,   33, 2772,
          930,  185, 1855,  658,  804,  664,  191,  866,  191,  191, 2329,  359,
         2437, 2292,  359,  359,  359,  176,  277, 2119, 2559, 1057,  697, 1100,
          859, 1999, 1107,  443, 2116,  932,  417,  664,  443,  866,  866,  866,
          866,  866,  191,  267,   31, 1587, 2862, 1999,  561, 1569,  443,  417],
        [ 439, 1735, 1477,  582, 1477, 1638, 2700, 1687, 2560, 2722, 1735,  582,
         1735,  439, 2917,  251, 2796, 2362, 2354,  648, 2944, 2120, 2304, 2594,
         1314, 1110,  726, 1797, 2989, 1486, 2989, 2205,  705, 2979, 2285, 2846,
         2110, 1108, 2110,  251,  439, 2635, 1304, 1477, 2914, 2798, 2906, 1742,
            0, 1225, 1587, 2766, 1475, 2989, 2205, 1031, 2143, 2364, 2205, 1217,
         2210,  808, 1686, 2650, 1822, 1938, 1392, 2110, 1392, 1591, 2809, 2162,
          354,  482,  482,   74, 1260, 1922, 2554,  143,  334, 1833,  334, 1389,
         1195,  425, 1066, 1462, 2084, 2081, 2084,  391, 1591, 1591, 1591, 2057,
         2057, 1494, 2945, 1591, 2057,  354, 1074,  832, 2452, 1234, 2482,  226,
          269, 2432,  360, 2263, 2727, 1462,  391,  479,  391,  479, 1591, 1549,
          895, 1233, 2792, 2022,  558, 2192, 2029, 2850,  682, 1788,  660, 1418,
         2850,    3,  708,  775, 1556, 1722, 1556, 1462,  775,  479,  479,  479,
          479, 1831,  391,  818, 1115, 1140, 1267,  384, 2178,  236, 1722, 2883],
        [1810,  532,  724,  532,  724,  724,  794, 2995, 2809, 1627, 2778,  532,
         2778, 2058, 2550,  793, 2072, 2460, 1419, 1351, 1245, 1116,  345, 2600,
         1839,  345, 1839, 1223,   33,   11, 1223,   33, 2982, 1377,  724, 1793,
         1753, 1793, 1753,  949, 2809, 2070, 1793,  724,  336,  794, 1544, 1510,
           83, 1245,   73, 1268, 2059, 2301,  196, 2875, 1636, 1154,  196,  357,
          196, 2828,  196,  968,  519, 2959,  241, 1793,  241,  274, 2312, 1544,
         2714, 2073,  949,  157, 1189,  852, 2318, 2440, 2440, 2665, 1706,  320,
         2889,  368, 2889,  161,  510,  968,  161, 2563, 2442, 1232, 1232, 1232,
         1232, 1479, 2124,  878,  857, 2369, 2312, 2853, 1446, 1222,  392, 2082,
          284, 2566, 2265,  676,  891, 1955, 1614,  503, 1955, 1050, 2173, 2303,
         1352, 2303, 1874, 2962, 2303, 2880, 1422, 1331,  804, 2394,    5, 2394,
          209,   60,   66, 2311, 2053, 1420, 2481, 1512, 2114, 1336, 1639, 2898,
         1336, 1955, 1955, 2880, 2962,  277, 2947,   60, 2394,  905, 2114, 2646]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0016, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[ 553,  576,  553,  ..., 1835, 2612, 1343],
        [2286, 2022,  236,  ...,  443,  443, 2225],
        [2956,   15, 1582,  ...,  342,  710,  497],
        [2173, 2678, 1874,  ..., 1831, 1005,  672]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0245, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[1500,  147,  358,  ..., 1500, 2428, 2512],
        [1513, 2264, 2329,  ..., 2003, 2689, 1831],
        [1727,  992, 1549,  ...,  630,  930, 2015],
        [ 277, 1974, 1065,  ..., 1420, 2114, 2586]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0008, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0105, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1011,  0.0053, -0.0668],
         [ 0.0846, -0.0268, -0.0713],
         [ 0.0549, -0.0474, -0.0836],
         ...,
         [-0.1087,  0.0213,  0.0568],
         [-0.0929, -0.0153,  0.0570],
         [-0.1146,  0.0011,  0.0838]],

        [[ 0.0977, -0.0055, -0.0600],
         [ 0.0732, -0.0447, -0.0633],
         [ 0.0538, -0.0517, -0.0808],
         ...,
         [-0.0984,  0.0270,  0.0585],
         [-0.0843, -0.0095,  0.0600],
         [-0.1056,  0.0079,  0.0810]],

        [[ 0.0916, -0.0111, -0.0716],
         [ 0.0766, -0.0435, -0.0677],
         [ 0.0368, -0.0606, -0.0834],
         ...,
         [-0.1212,  0.0167,  0.0573],
         [-0.1083, -0.0201,  0.0561],
         [-0.1285, -0.0080,  0.0812]],

        [[ 0.0817,  0.0095, -0.0536],
         [ 0.0694, -0.0154, -0.0570],
         [ 0.0363, -0.0426, -0.0718],
         ...,
         [-0.0694,  0.0345,  0.0649],
         [-0.0631,  0.0011,  0.0649],
         [-0.0790,  0.0185,  0.0881]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0166,  0.0300, -0.1238],
         [-0.0510,  0.0663, -0.1264],
         [-0.0119,  0.0653, -0.0788],
         ...,
         [-0.0765, -0.0167,  0.0576],
         [-0.0769, -0.0110,  0.0665],
         [-0.0610, -0.0070,  0.0810]],

        [[-0.0203,  0.0379, -0.1140],
         [-0.0521,  0.0637, -0.1054],
         [-0.0052,  0.0609, -0.0599],
         ...,
         [-0.0681,  0.0112,  0.0162],
         [-0.0655,  0.0172,  0.0270],
         [-0.0521,  0.0213,  0.0408]],

        [[ 0.0068,  0.0044, -0.1144],
         [-0.0444,  0.0277, -0.1326],
         [-0.0313,  0.0430, -0.0656],
         ...,
         [-0.0921, -0.0119,  0.0926],
         [-0.0912, -0.0056,  0.1022],
         [-0.0749, -0.0004,  0.1136]],

        [[-0.0252,  0.0250, -0.0911],
         [-0.0406,  0.0430, -0.0950],
         [-0.0139,  0.0498, -0.0530],
         ...,
         [-0.0604, -0.0017,  0.0175],
         [-0.0606,  0.0029,  0.0272],
         [-0.0454,  0.0072,  0.0413]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0589, -0.0272,  0.0268],
         [-0.1206, -0.0088,  0.0324],
         [-0.0907,  0.0053, -0.0638],
         ...,
         [-0.0272, -0.0441,  0.0672],
         [-0.0277, -0.0442,  0.0819],
         [-0.0209, -0.0430,  0.0462]],

        [[-0.0708, -0.0245,  0.0393],
         [-0.1186, -0.0025,  0.0344],
         [-0.0798,  0.0098, -0.0735],
         ...,
         [-0.0585, -0.0307,  0.0275],
         [-0.0550, -0.0346,  0.0447],
         [-0.0531, -0.0294,  0.0076]],

        [[-0.0507, -0.0316,  0.0178],
         [-0.1103,  0.0016,  0.0113],
         [-0.0936,  0.0216, -0.0571],
         ...,
         [-0.0689, -0.0219,  0.0720],
         [-0.0645, -0.0247,  0.0852],
         [-0.0618, -0.0211,  0.0496]],

        [[-0.0188, -0.0451,  0.0729],
         [-0.0507, -0.0406,  0.0532],
         [-0.0260, -0.0174, -0.0548],
         ...,
         [ 0.0059, -0.0452,  0.0646],
         [ 0.0032, -0.0464,  0.0815],
         [ 0.0130, -0.0433,  0.0455]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[  40,  269, 1006, 2339,  788,  780,  237, 1664,  357, 1946, 1946, 1898,
           11, 1664,  450, 1607,  682,   33, 1986,  694,  590,  297,  746, 1476,
         1315, 1315, 1355, 2936, 1980, 1682,  803, 1682,  803,  786, 1035, 1018,
          796, 1035,  796, 2119,  357,  806, 1035, 2546, 1542,  640, 2512, 2646,
         1788, 1086,  751,   85, 1322, 2459,  712, 2835, 1682, 2158,  712, 2110,
          235, 1037,  235, 2110, 1542, 2526,  638,  796,  638, 1881,  848,  968,
         2731, 2575,  640, 1988, 1988,  727, 2583, 2794, 1566,  484, 1566,  393,
          776, 2618, 1732, 1830, 2110, 2596,  327, 2110,  461,  266,  173,  173,
          383,  187,  461, 2167,  373, 2781,  774,  434, 1031, 2433, 1334, 1836,
         1836, 2348, 2828,  321,  499, 2028, 2676,  271,  120, 2841,  960,  201,
         1163, 2686, 1125, 2592, 2382, 1932, 2208, 2531, 2531, 2748, 1398, 2336,
          647, 2404, 1004, 1279,  967, 2252, 2741, 1131, 2225,  304,  304,  271,
         2984, 1978, 2909,  547, 2544,  714, 2919, 2613, 1434, 2613, 2225, 1998],
        [2589,  925, 1116,  761, 1116, 1207, 1402, 1364, 2756, 2589, 2470,  925,
         2589, 2589, 1402, 1534, 1534, 1534, 2697, 2471, 2471, 2664, 2471, 2697,
         2471, 2471,  466,  466,  129, 2322, 1411, 2322,   21,  761, 1116, 1116,
         1910, 2404, 1607, 2553, 2756, 2756, 1116, 1207, 2940,  882,  758, 1836,
         1402, 1402, 2816, 1739,  875, 1312, 2859, 1511,  504,  850, 2859, 2322,
         1647, 2480, 1647, 1647,  761,  735,   22,   22, 1607,  135, 1347, 2637,
         2218,  870, 1228, 2853, 2253,  774,  304, 1345, 2081, 2109, 2081, 1735,
         2505,  996, 2939,  535, 1647,   30, 1647, 1647, 1467,  430, 1069,  430,
          430, 2121, 1599, 2506, 2104, 2443, 1493, 1004,  741,  813, 2928, 2280,
          339,   94, 1460, 1491, 1129, 2354, 1647,   30,   30, 1647, 2104,  651,
         2886, 1432, 1816, 2104, 2104,  450, 2751, 1852, 1247,  724,  345, 1065,
         1413, 1845, 1631, 2920, 2176, 2900,   87, 2354,   87, 1360, 2245, 2245,
          116,   30,   30, 2746, 2197, 2962, 1369, 1865, 2079, 1385, 1865,  816],
        [1020,  213, 1691, 2263, 1691, 1508,  801, 1154,  560, 2662, 2662,  213,
          575,  603, 1796, 2519, 1910, 2083,  382, 2523,  653, 2098, 2452, 2751,
         1483,  887, 1483, 2959, 1528, 1687, 2959, 2006, 2247, 2315, 2729, 1665,
          195, 1438, 2562, 1751,  322, 2207, 2671, 1691, 2729, 2606,  140, 2229,
         1954,  653,  285,   83,  823, 2534,  618,  157,  541, 2645,  618, 1277,
          253, 2816, 2752,  641, 2129, 2158, 2115, 2562, 1438,  771,  555, 1288,
         1808, 2310,  984, 1054, 2987, 1569, 1234, 2490, 2655,  475, 2321, 2253,
         2675, 2766, 2758,  136,  445, 2804,  257,  633,  295,  262,  262, 2205,
         1696,  816, 2824, 1887,  284, 2472, 1110,  660, 2481, 2952,  644, 1375,
          904, 2514, 2677, 1218, 2236, 2570, 2926, 2440, 2196, 2303,  884, 1835,
         2787, 1369,  301, 2641, 2641, 2778,  328,  235, 2488, 1771,  954, 2920,
           47,  686, 1547, 1351, 2305,  597, 1711, 1168, 2305,   29,   29, 2305,
         2040, 1218, 2394, 2778, 1766, 2342, 1285, 2244, 2195, 1922,  755, 1922],
        [2250, 1995,  897, 1593, 1480,  291, 2437, 2175,  651,  153,  776, 1593,
          776, 1767, 2553, 2108,  605,  605, 2704,  605, 1537, 2356, 2356,  605,
         1255, 1537, 1578, 1255, 2569, 1424, 2520,  381, 2349, 2011, 2934,  765,
          765, 1845, 1734, 2854, 1767, 2250,  678,  291, 1221, 2362, 2404, 1499,
         1502, 1537,  667, 1907,  951,  810, 1389, 2356,  288,  426,  435, 1939,
         2996,  664,  745, 1838, 2639, 1688,  246, 1734, 2304, 1736, 1118, 1749,
         2572,  970, 1589, 2135, 1962,  546, 1193,  546, 1193, 1907, 1193,  667,
         1461, 1907,  633,  288, 1838,  288,  192,  664, 2209, 2904,  137,  137,
          137, 1413, 1019,  960,  832, 2584, 1589, 2247,  649,  649,  935,  546,
          546, 1306, 1306,  482, 2341,  416,  288,  416,  416,  357,  284, 2205,
          219, 1425, 1146,  779, 1711,  696, 2673, 1885, 1146, 1223,   98, 2573,
         1223,   98, 1306,  509,  482,  183, 1492, 2889, 2536,  416,  416,  416,
          416,  416,  416,  696, 1711, 2573, 1566,  509,  769,  537, 2536,  509]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0015, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[ 599, 1533, 1217,  ..., 2252, 2225, 1319],
        [1069, 2183, 2104,  ..., 1361, 1669,  604],
        [ 523,  563,   11,  ..., 2504, 1168, 1547],
        [1481, 2903, 2209,  ..., 1801, 1801,  769]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0210, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[ 759, 2252,  501,  ..., 1256, 1682, 1112],
        [ 252,  115,  430,  ..., 1343, 1994, 1467],
        [2256, 2195,  901,  ..., 1608, 2570, 2305],
        [ 121, 2158, 1246,  ..., 2244,  664, 1644]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0008, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0105, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1451,  0.0499, -0.0442],
         [ 0.1322,  0.0142, -0.0488],
         [ 0.0971,  0.0142, -0.0650],
         ...,
         [-0.1135,  0.0250,  0.0651],
         [-0.0993, -0.0085,  0.0612],
         [-0.1210,  0.0062,  0.0860]],

        [[ 0.1133,  0.0289, -0.0556],
         [ 0.0912, -0.0120, -0.0662],
         [ 0.0661, -0.0286, -0.0778],
         ...,
         [-0.1081,  0.0279,  0.0683],
         [-0.0997, -0.0082,  0.0655],
         [-0.1189,  0.0090,  0.0904]],

        [[ 0.1009,  0.0152, -0.0662],
         [ 0.0775, -0.0277, -0.0710],
         [ 0.0465, -0.0452, -0.0848],
         ...,
         [-0.1151,  0.0286,  0.0679],
         [-0.1049, -0.0099,  0.0650],
         [-0.1247,  0.0052,  0.0905]],

        [[ 0.1356,  0.0486, -0.0545],
         [ 0.1272,  0.0119, -0.0655],
         [ 0.0775, -0.0165, -0.0816],
         ...,
         [-0.1169,  0.0262,  0.0666],
         [-0.1046, -0.0104,  0.0641],
         [-0.1240,  0.0053,  0.0908]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 1.0572e-01, -3.3799e-02, -5.7209e-02],
         [ 8.9480e-02, -1.5324e-02, -8.4623e-02],
         [ 1.1424e-01, -5.9332e-03, -4.1371e-02],
         ...,
         [-6.5130e-02, -2.4769e-02,  4.7010e-02],
         [-6.6233e-02, -2.0990e-02,  5.4011e-02],
         [-5.1015e-02, -1.8377e-02,  6.5029e-02]],

        [[ 9.5568e-02, -3.1849e-02, -7.4080e-02],
         [ 5.4359e-02, -4.5906e-05, -1.0568e-01],
         [ 8.0721e-02,  2.5555e-02, -6.1043e-02],
         ...,
         [-5.2920e-02, -2.6019e-02,  5.1627e-02],
         [-5.0557e-02, -2.1818e-02,  5.7115e-02],
         [-3.1764e-02, -1.9436e-02,  6.7577e-02]],

        [[ 9.0470e-02, -1.3102e-02, -1.0528e-01],
         [ 3.9043e-02,  1.3188e-02, -1.3912e-01],
         [ 5.2179e-02,  3.5345e-02, -8.8668e-02],
         ...,
         [-7.9048e-02, -1.2642e-02,  8.6373e-02],
         [-7.7108e-02, -6.2943e-03,  9.3585e-02],
         [-5.6291e-02, -5.2504e-03,  1.0511e-01]],

        [[ 1.3150e-01, -1.9080e-02, -8.3112e-02],
         [ 1.0035e-01,  9.0390e-03, -1.2760e-01],
         [ 1.0175e-01,  2.5928e-02, -8.9858e-02],
         ...,
         [-6.9775e-02, -3.0273e-02,  1.0584e-01],
         [-7.2100e-02, -2.8309e-02,  1.1117e-01],
         [-5.5989e-02, -2.5008e-02,  1.1749e-01]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0206,  0.0405,  0.0618],
         [ 0.0031,  0.0162,  0.0436],
         [ 0.0406,  0.0313, -0.0660],
         ...,
         [-0.0244, -0.0404,  0.0383],
         [-0.0257, -0.0423,  0.0509],
         [-0.0175, -0.0390,  0.0193]],

        [[ 0.0301,  0.0158,  0.0321],
         [-0.0247, -0.0158, -0.0008],
         [ 0.0146, -0.0012, -0.1170],
         ...,
         [-0.0062, -0.0513,  0.0544],
         [-0.0097, -0.0511,  0.0700],
         [ 0.0003, -0.0501,  0.0355]],

        [[ 0.0073,  0.0119, -0.0038],
         [-0.0305, -0.0326, -0.0027],
         [-0.0019, -0.0176, -0.1085],
         ...,
         [-0.0376, -0.0629,  0.0728],
         [-0.0368, -0.0654,  0.0962],
         [-0.0317, -0.0605,  0.0516]],

        [[ 0.0233,  0.0469,  0.0153],
         [ 0.0017,  0.0150, -0.0341],
         [ 0.0275,  0.0179, -0.1316],
         ...,
         [-0.0289, -0.0323,  0.0672],
         [-0.0303, -0.0343,  0.0832],
         [-0.0223, -0.0318,  0.0478]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[1657,  362, 2551, 2551, 2583, 2551, 1440, 1657, 1457,  362,  362, 1275,
          362,  362,  141, 1870,  279, 1074, 1426, 1426, 2597,  136, 1956, 2541,
          532,  532, 2746,  532, 2985,  265, 2546,  512,   73, 1626, 2583,  872,
         2179,  914, 2179,  377,   57, 2367, 2583, 2583,  515, 1579, 1138,  369,
          836, 2410, 2243,  189, 2002, 2227, 1185, 2002, 1109, 2487, 2874,  350,
         2688, 1940, 2688,   80, 1503, 2051,  545,  872,  872, 2430,  623,  623,
         1100, 1512,  627,    0, 1223, 1226,  238,  375, 1665,  634,  717, 2026,
         1951, 2203, 1951, 2658,  846, 2003,  846,  954, 2341, 2593, 2593, 1378,
         2679,  255, 1700, 2679, 2415,  761,  255, 1350, 1588, 2155, 1217, 1032,
          201,  544,  324, 1793, 1342, 1884, 2979, 2807, 2120, 2807,  482, 1289,
         2911, 1533, 1999, 1999, 1533, 2665, 1167, 2726, 1022, 2648, 1542, 2637,
          679, 2571,  544, 2459,  787,  488, 1969,  358, 2459,  476, 1969, 1969,
         2807,  365, 2283, 2665, 2699, 2336, 1267, 2571, 2273, 1110, 1629, 2596],
        [2852,  631,  243, 2844,  916,  901, 2475, 1399, 2852, 2148, 2148,  474,
         2508, 2852,  429,  743,  743, 2209, 2074, 1282, 2825, 1128, 2948, 2536,
         1327, 1327, 1327,   83, 2684, 1731, 1191, 2495,  817,  506,  596, 2173,
         2173,   18, 2173,  263,  631, 2596,  596,  243, 2725,  263, 2411, 1281,
          621, 1155, 1809, 2466,    5,  667,  993,  455, 2180, 1032, 2123, 1545,
         2961, 1616, 2961, 2672,   18,   18, 1070, 2173,   82, 1466, 2826,   18,
         1567, 2246, 1497, 2856, 2328, 1926, 1109,  984, 1179, 2874, 1179,  942,
         2355, 1021, 2356, 2633,  962,  590,  271, 2363,  840, 1070, 1070, 1070,
         1807, 1567,   82, 1807, 1610,  583, 1046, 1514, 2640, 1018, 1811,  641,
         2232, 2345, 2109, 2345, 1724, 2502,  459, 1948, 2363, 1948, 1807, 1610,
         1610, 1428, 1514, 1514, 1428, 1811, 1514, 1811, 1811, 2697, 2697, 1799,
         2697, 1799, 2345, 2345, 2502,  310, 2502, 2502, 2345,  459,  459,  459,
         1948, 1948,  459, 2697, 1811, 1799, 1799, 2345, 1799,  310, 2345,  459],
        [1222, 2795,  652, 2857,  652,   42, 2444, 1853,  488, 2088, 2088, 2857,
          324, 2795,  167,  167,  348,  329, 2945,  345,  994, 2586,  994,  439,
         1996, 2549, 1131, 1730, 2309, 1329, 2350, 2430,  977, 2062, 1354, 1354,
         1354, 2578, 1354, 1439,  981,  981, 1354,  652, 2375, 1384, 2795,  136,
         1056,  994,  586, 1652, 2061, 2098, 1954,  138, 1124,  947, 2374,  669,
         1447,  557, 2167, 2641, 1298,  370, 2822, 2578,  370,  421,  981, 1182,
         1182, 1260, 1260, 2863, 2863, 1766,  198, 2863, 1652, 1652, 1652, 2609,
         1544,   40, 2229, 2876, 2920, 1842, 2785,  565,  170, 2460, 2460,  664,
         1022, 1182,  559,  521, 1758, 1182, 1260, 2975,  551, 1659, 2604, 1357,
           78, 2680, 1965,  339, 2680,  402, 1434,  865, 1909,  676,  899, 2217,
          940, 2725,  943, 2938, 2938, 2369, 2975, 1822, 1822, 2067,  768, 2067,
         1413,  485, 2680,  966, 2338,   14,   51, 1749,   14, 2703,  747,  747,
          729, 2197, 1615, 2369,  679, 2067, 2067, 2338, 2067, 1096, 2338,   43],
        [1966, 1966, 1521, 1852, 2939, 1973,  761, 1141, 2188, 2323, 2453, 2870,
         2453, 1141,  554, 2790, 2790, 2511, 2511, 2790,  957, 2969, 2662,   81,
         1815,  471, 2969, 2969, 2440, 2608,  272, 1853,  542, 2937, 1778,  632,
         2297, 2688, 2929, 2015, 2188, 2289, 1778, 2870, 2018,  761, 1820,  468,
         1926,  957,   49,  123, 1685,   36, 1853, 2199,  660,  213, 1853,  757,
          757,  341,  757,  213, 1907,  448, 1005, 2929,  620, 1341, 2752,  531,
         2940,  759,  759,  759, 1918, 1918,  468, 1918,  123,  123,  123, 1865,
          626,  405, 1692, 1939,  180,   44,  180,  180, 1114, 2020,  263, 1275,
         1741, 2501,  390, 2081,  869, 2738, 1918,  917,  307, 1142,   65,  405,
          307,  662, 1240,   92,  651, 1939, 2231, 1386,  180, 2231,  904,  640,
          994, 1817, 2526,  977, 2526, 1512, 2978, 1700, 1700, 1475,  735, 1575,
         1475, 1932, 2959, 1204,   89, 1075,   89,   92, 1417, 2770,  110,  110,
           87, 2231, 2770, 1512, 1352,  784,  149, 1075,  915, 2515, 2934, 1154]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0016, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[2551, 2179, 2551,  ..., 1922,  819, 2972],
        [ 631, 1605,  916,  ...,  566,  566,  711],
        [1222, 1298,  981,  ..., 1401,  339, 1001],
        [2939,  923,  336,  ..., 1939, 1939, 1462]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0197, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[ 427,  765,  260,  ..., 1170, 1170, 1236],
        [2626, 2073,   18,  ..., 1236, 1236,  381],
        [1915, 2907, 2578,  ..., 1796, 1796, 2247],
        [1142, 1338,  466,  ..., 1621,  626, 2890]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0010, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0105, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1328,  0.0635, -0.0431],
         [ 0.1172,  0.0262, -0.0476],
         [ 0.0885,  0.0130, -0.0669],
         ...,
         [-0.1340,  0.0456,  0.0840],
         [-0.1143,  0.0052,  0.0827],
         [-0.1457,  0.0220,  0.1064]],

        [[ 0.1173,  0.0463, -0.0442],
         [ 0.0901, -0.0009, -0.0538],
         [ 0.0729, -0.0067, -0.0706],
         ...,
         [-0.1361,  0.0347,  0.0742],
         [-0.1236, -0.0033,  0.0699],
         [-0.1444,  0.0170,  0.0986]],

        [[ 0.1221,  0.0462, -0.0534],
         [ 0.0968,  0.0029, -0.0617],
         [ 0.0617, -0.0171, -0.0772],
         ...,
         [-0.1397,  0.0415,  0.0764],
         [-0.1203,  0.0012,  0.0772],
         [-0.1472,  0.0247,  0.1037]],

        [[ 0.0741,  0.0303, -0.0419],
         [ 0.0468, -0.0084, -0.0522],
         [ 0.0271, -0.0272, -0.0669],
         ...,
         [-0.1110,  0.0681,  0.0940],
         [-0.1027,  0.0241,  0.0912],
         [-0.1266,  0.0430,  0.1156]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.1327, -0.0057, -0.0469],
         [ 0.0976,  0.0124, -0.0852],
         [ 0.1115,  0.0258, -0.0414],
         ...,
         [-0.0526, -0.0255,  0.1531],
         [-0.0585, -0.0208,  0.1503],
         [-0.0479, -0.0175,  0.1540]],

        [[ 0.1336, -0.0067, -0.0383],
         [ 0.0698,  0.0191, -0.0973],
         [ 0.1048,  0.0310, -0.0526],
         ...,
         [-0.0480, -0.0221,  0.0956],
         [-0.0470, -0.0175,  0.0943],
         [-0.0332, -0.0132,  0.1004]],

        [[ 0.1178,  0.0132, -0.0729],
         [ 0.0453,  0.0335, -0.1148],
         [ 0.0703,  0.0443, -0.0696],
         ...,
         [-0.0494, -0.0266,  0.1426],
         [-0.0538, -0.0237,  0.1389],
         [-0.0431, -0.0229,  0.1432]],

        [[ 0.0099,  0.0197, -0.0537],
         [-0.0586,  0.0510, -0.0627],
         [-0.0227,  0.0576, -0.0219],
         ...,
         [-0.0691, -0.0112,  0.1210],
         [-0.0740, -0.0082,  0.1263],
         [-0.0654, -0.0053,  0.1349]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0246,  0.0607,  0.0222],
         [ 0.0103,  0.0264, -0.0021],
         [ 0.0457,  0.0316, -0.1049],
         ...,
         [-0.0014, -0.0240,  0.0839],
         [-0.0026, -0.0251,  0.1002],
         [ 0.0033, -0.0230,  0.0650]],

        [[ 0.0294,  0.0388,  0.0194],
         [-0.0159,  0.0146, -0.0210],
         [ 0.0246,  0.0304, -0.1234],
         ...,
         [-0.0058, -0.0232,  0.0598],
         [-0.0060, -0.0252,  0.0792],
         [ 0.0014, -0.0208,  0.0394]],

        [[ 0.0134,  0.0484,  0.0066],
         [-0.0331,  0.0177, -0.0260],
         [-0.0049,  0.0251, -0.1157],
         ...,
         [ 0.0115, -0.0277,  0.1061],
         [ 0.0094, -0.0294,  0.1230],
         [ 0.0168, -0.0260,  0.0853]],

        [[ 0.0017, -0.0046,  0.0798],
         [-0.0652,  0.0021,  0.0614],
         [-0.0437,  0.0184, -0.0461],
         ...,
         [ 0.0433,  0.0081,  0.1461],
         [ 0.0428,  0.0082,  0.1664],
         [ 0.0505,  0.0089,  0.1188]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[  62, 2914, 2841, 2841, 2517, 2841, 1603, 1846,  648,  643,   19, 2543,
          890,  648,  960, 2924, 2924,  200, 1072,  311,  133, 2303,  581, 2895,
         1293, 2158, 1481, 2620,  265,  485,  201,  121, 2393, 2543, 2841, 2841,
         2841,  600, 1194, 2354, 2787, 1421, 2841, 2841, 2543, 2111, 2782, 1523,
         2588, 1077, 2508,  937, 2393, 1287,  194, 1943, 1358, 2974,  760,   68,
         1635, 1635,  380,  833, 2543,  600,  600,  600,  600,  787,  208,  585,
         2887,  860, 2754, 2111, 1869,  294,  412,   66, 2320, 1469,  596, 2194,
         1176, 2492, 1032, 1548,  645, 1548,  645, 1920, 2837, 1970, 1018,  600,
         1018, 2887,  210,  571,  504,  754,  555, 1076,  807, 1552, 1083,  968,
         2657, 2680, 1726,  128,   31, 1384,  160,   77, 1307, 2304,  571, 2538,
          816, 2090, 1316, 1316,  343,  285,  171, 1474, 2112,   25, 1433,  837,
         1008,  888, 2680,  492, 1817,  130, 1514, 2530, 1942, 1007, 1958, 1007,
         1141, 2304, 2079,  285, 2112, 1613,   86,  130, 1217, 2345,  130, 1007],
        [2195,   35, 2872, 2872,   35, 2872, 2274,  593,  376, 2872,  217, 2872,
         2872, 2157, 2879,  806, 2726,  626,  626,  943,  847, 2028, 2371, 2137,
         1307, 2058,  521,  580, 1138,  256,   75, 2229, 2748, 2387, 2872, 1219,
         1996, 1219, 1996, 2274, 1515, 1876, 2631, 2872,   32, 2029, 2029, 1984,
         1456, 2126, 2534, 2126, 1159,  262, 2437, 1598,  477, 1368, 1968, 2192,
          797, 1728, 1777,  757, 2040,  605, 2786, 1219, 1196, 1897, 2248, 2738,
         2738, 2421, 2421, 1984, 2421, 2421, 2879, 2421, 1079, 1079, 1925, 1475,
         2317, 1425, 2317,  564,  172,  172,  172, 1692,  769, 1458, 1458,  773,
          510, 2201,  775,  361,  361,  769, 2738,  226, 1609,   46, 2630, 1825,
         1925, 2580, 2380, 2466,  647,  425, 2414,  425, 2638, 2430,  823, 1704,
          646, 1367, 1657, 1367, 1367, 2023, 1685, 1231, 1657,   98,  490, 2715,
           98,  688, 1485, 1500, 1416, 1953,  670,  425,  327,    3,  913, 1949,
          925, 2958, 1285, 2023,   98,  202,  202, 2724, 1600, 1635,  990, 2115],
        [1465, 2035,   73,  554, 1244, 2872, 2884, 2396,   29,  767,  767, 1213,
          767, 1881,  941,  727, 1535,  315,  463, 1535, 2902, 2750, 2902, 2855,
          325, 2772,  325,  325, 1889,  719,  328, 1088,  374, 2553,  363, 1703,
         1555, 1703, 2254,  237,  138, 2064,  553, 2437, 1994, 1785,  418, 1199,
          801, 2902, 2750, 2784, 1889, 1000, 2612,  732,  916, 1030, 2612, 1324,
          430,  653,  430,  191,  115, 2182, 1865, 1703, 2110, 2456, 2442, 2399,
          234,  420, 2798, 1207, 2587, 1434, 1590, 1107, 1909, 2132, 2845, 1000,
          992,  124,  905, 1279,  191,  502, 1092,  191, 1102, 2425, 1338, 1693,
         1078,  234,   49, 1265, 2740,  683,  683, 2694,  358,  358, 1416, 1095,
          472, 2500,  750, 1540, 1612, 1279, 1432, 1014, 2954, 2748, 1265,  597,
          320,  282, 2674, 2674, 1262, 1692, 1530,  738,  433,  735, 2441, 1501,
          262, 1501, 1545,  869,  494,  494,  249,   32,  249, 1860, 1860, 1681,
          606, 1723, 2954, 1692, 1264, 2613, 2624, 1860, 2578, 1150,  494, 1150],
        [2744,  869, 2010,  869, 2010, 2010, 2199,  885,  885,  869,  869,  869,
          869,  885, 1827, 1775,  885, 2744, 2744,  885, 1925, 1925, 1502, 2760,
         1054, 1502, 1054, 1054, 1502, 1054, 1054, 1502, 2760, 2851, 2010,  869,
         1506, 1506, 1506,  913,  885,  294, 2010,  869, 2851,  913, 1640, 1649,
         1849, 2280, 2571, 2325, 1090,  321, 2536,  969,  969, 1973, 1321, 1695,
         1733,  878, 1733,  878, 2851, 2851, 2851,  869, 2851,  617, 2859, 1640,
         1640,  913,  913,  783, 2199, 2874,  516, 2874, 1707, 1707, 1185,  470,
         1735, 1961,  156, 2930,  878, 2930,  878,  878,  104,  617,    4,    4,
            4, 2859, 1976, 2722,  327, 2859, 2859, 1165, 1417,  361, 1995, 2146,
          912, 1882, 1587, 1466, 1288, 1466, 1283, 1283, 1519,  878,  327, 2689,
         1182, 1809, 1737, 1435, 1435, 2823, 2589,   59, 2445, 2058, 2602, 2841,
          993, 1312, 2488,  793, 1666, 1666, 2975, 2930, 2975, 2474,  840, 1666,
         2645, 1476,  840, 2823, 1737, 2467, 1987, 1993, 1666, 2863, 1666, 1682]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0017, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[1616, 2841, 2914,  ..., 2974,  792, 2974],
        [ 815,  279, 2157,  ..., 2897, 1503,  377],
        [ 338, 1614,  324,  ..., 1279, 1279, 1279],
        [2851,  617,  294,  ..., 1283, 1283, 1476]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0005, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0233, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[1960, 2139, 2841,  ..., 2704, 1967, 1839],
        [ 868, 2908, 1439,  ..., 1820,  596, 1364],
        [2028,  584,  438,  ...,  719,  916,  328],
        [ 885, 1283,    4,  ..., 1321, 1321,  297]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0009, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0118, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.0965,  0.0731, -0.0462],
         [ 0.0986,  0.0505, -0.0530],
         [ 0.0511,  0.0058, -0.0785],
         ...,
         [-0.1061,  0.0766,  0.1019],
         [-0.0787,  0.0384,  0.1121],
         [-0.1021,  0.0578,  0.1309]],

        [[ 0.1070,  0.0641, -0.0561],
         [ 0.0941,  0.0227, -0.0690],
         [ 0.0533, -0.0050, -0.0854],
         ...,
         [-0.1434,  0.0409,  0.0854],
         [-0.1282,  0.0011,  0.0824],
         [-0.1522,  0.0221,  0.1099]],

        [[ 0.0919,  0.0550, -0.0545],
         [ 0.0723,  0.0150, -0.0687],
         [ 0.0393, -0.0155, -0.0835],
         ...,
         [-0.1403,  0.0427,  0.0856],
         [-0.1265,  0.0031,  0.0834],
         [-0.1519,  0.0236,  0.1094]],

        [[ 0.0984,  0.0760, -0.0497],
         [ 0.1047,  0.0524, -0.0627],
         [ 0.0618,  0.0140, -0.0809],
         ...,
         [-0.1293,  0.0488,  0.0880],
         [-0.1092,  0.0126,  0.0834],
         [-0.1358,  0.0368,  0.1131]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.1184, -0.0002,  0.0147],
         [ 0.1080,  0.0099, -0.0226],
         [ 0.0894,  0.0221,  0.0155],
         ...,
         [-0.0515, -0.0193,  0.1758],
         [-0.0531, -0.0168,  0.1771],
         [-0.0359, -0.0164,  0.1859]],

        [[ 0.1494, -0.0168,  0.0018],
         [ 0.1454, -0.0033, -0.0283],
         [ 0.1394,  0.0214,  0.0071],
         ...,
         [-0.0856,  0.0034,  0.1470],
         [-0.0828,  0.0076,  0.1463],
         [-0.0635,  0.0081,  0.1516]],

        [[ 0.1150, -0.0285,  0.0132],
         [ 0.1016, -0.0141, -0.0223],
         [ 0.1244,  0.0195,  0.0090],
         ...,
         [-0.0745,  0.0027,  0.1265],
         [-0.0705,  0.0068,  0.1259],
         [-0.0505,  0.0086,  0.1312]],

        [[ 0.1099, -0.0206,  0.0461],
         [ 0.1192, -0.0052,  0.0184],
         [ 0.1131,  0.0143,  0.0452],
         ...,
         [-0.0455, -0.0101,  0.1246],
         [-0.0426, -0.0055,  0.1266],
         [-0.0285, -0.0045,  0.1333]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0267,  0.0739,  0.0509],
         [ 0.0223,  0.0549,  0.0355],
         [ 0.0535,  0.0309, -0.0681],
         ...,
         [-0.0149, -0.0475,  0.0766],
         [-0.0131, -0.0491,  0.0931],
         [-0.0090, -0.0458,  0.0558]],

        [[ 0.0100,  0.0697,  0.0322],
         [-0.0049,  0.0625,  0.0103],
         [ 0.0367,  0.0503, -0.1244],
         ...,
         [-0.0848, -0.0352,  0.0725],
         [-0.0842, -0.0384,  0.0909],
         [-0.0817, -0.0325,  0.0499]],

        [[ 0.0304,  0.0639,  0.0388],
         [ 0.0194,  0.0361,  0.0160],
         [ 0.0504,  0.0353, -0.1135],
         ...,
         [-0.0692, -0.0307,  0.0580],
         [-0.0697, -0.0341,  0.0761],
         [-0.0641, -0.0272,  0.0360]],

        [[ 0.0407,  0.0580,  0.0530],
         [ 0.0261,  0.0537,  0.0296],
         [ 0.0660,  0.0331, -0.0817],
         ...,
         [-0.0189, -0.0314,  0.0665],
         [-0.0222, -0.0331,  0.0826],
         [-0.0122, -0.0291,  0.0460]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[1401, 2509,  666, 1238,  666, 2403, 2115,  122,  963, 1358, 1358, 1238,
         2817, 1401, 2115,  122,  122, 2387, 1643,  122,  380,  674, 1560, 1643,
         1502, 1672, 1596, 2868, 2504,  250, 2045,  960, 1506, 1305, 2943,  504,
         1128,  821,  821, 1597, 1401, 2312, 2943,   38, 1260, 1597, 1401, 1216,
          862,  900, 1335, 1044, 1905,  600, 2181, 2468, 1414, 1421, 2039,  819,
         2657, 1972, 2657, 2890, 1347,  504,  720,  504,  720,   59, 2312, 2849,
         1994, 2838, 1401, 1394, 2838, 2127, 2838, 2788, 2464, 2897, 2180,  686,
         2603, 2038,  850, 1068, 2973, 1068, 2973, 2973, 2587,  756, 2404, 2404,
          877, 2599, 1060, 1105, 2920, 2312,  184, 2137, 2739, 2739,  460,  468,
          423,  586,  200, 1097, 1603, 2391,  160, 1232,  160, 1510, 1105, 2026,
         2587,  307,  307,  307,  307, 2216, 2137,  307,  307, 2216, 2188, 2216,
         1779, 2206,  586, 1724, 1095,  448, 1095, 1929, 1097, 1068,  625, 1019,
         1068,  160,  160, 2216,  307, 2216, 1265,  448, 2216, 1265, 2816,   68],
        [ 209, 2726, 1687, 1687, 1493,  622, 2170, 2753, 2726, 2634, 2634,   62,
         2634,  946,  316,  367,  367,  367,  367,  562,  316, 2512,  316,  562,
          316,  316,  316,   47, 2512, 2512, 2512, 2512, 1464,  823, 2195, 2933,
         2418, 1009,  340,  562,  946,  234, 2195, 1687,   62,  562,  562, 1407,
          562,  316, 1407, 1407,   10, 2512, 2743, 2512, 2085, 1068, 2085, 2247,
         2247, 1068, 1864, 1249, 2933, 1038,  295, 2690, 2779, 2779,  562,  562,
          562,  562,  562, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 2594,
         2594,   76, 1068, 1725, 1249, 1725, 1249, 1249, 2779,  295,  295, 2766,
         1315,  562, 1086,  579, 1086, 1240,  562, 1744, 1090, 1240, 1744,   76,
          212, 1725, 2594, 1725, 1725, 1725, 1249, 1725, 1725, 1725, 1086,  579,
         1086, 1086, 1086, 1086, 1086, 1086, 1744, 1744, 1086, 2365,  725,  725,
         1744,  725, 1725, 1725, 1725,  589, 1725, 1725, 1725, 1725, 1725, 1725,
         1725, 1725, 1725, 1086, 1086,  725, 1602, 1725, 1497, 1725, 1725, 1725],
        [1144, 2067,  810,  533,  941,   66, 2346, 1123, 1123, 1615,  271,  533,
         2020, 2067, 2648, 2648, 2648,  259,  495,  139, 2648, 2648, 2648,  108,
         2648, 2648, 2648, 2648, 2648, 2683, 1769, 2648, 2456, 2118, 2694, 1026,
          882, 2588, 1760, 2346, 2067, 1025, 2566, 2581,   20, 2346, 2438, 2648,
          495, 2648, 2648, 2648, 2632, 2648, 1769, 2632, 2632, 2287, 2632, 2683,
         2903, 2287, 2903, 2784, 1775, 2634, 1051, 1415,  744, 1930, 1157, 1775,
         2588, 2346, 2118, 2346, 2280, 2648, 2648, 1758, 2648, 2456, 2648, 2287,
         2287,  723, 2287, 1607, 2993, 1607, 2903, 1135, 1930, 2517, 2517,   17,
         1540, 2588, 2634,  566, 2681, 2935, 1793, 1540, 2424,  723, 2868,  723,
         1013,   87,  723,   87, 2993,   87, 1135,   87, 1135, 1135,  566,  866,
         2517, 1336, 1574, 1764, 1574, 1764, 1540,  117,  117, 1764, 2628, 1764,
         1764,  280,   87, 1731, 1135, 1135, 1135,   87,   87, 1135, 1135, 1135,
         1135, 1135, 1135, 1764, 1764,  416,  416, 1135, 1135, 1127, 1135, 1135],
        [2866, 2811, 2279, 1235, 1958,  202,  388, 2195, 2178,   64, 1656, 1784,
         1744,  601, 1360,  383,  772,  575,  496,  269, 2097, 1567,  790, 2251,
          585, 1227, 2840, 2918,  598, 2609,  580, 1660,  296,   10,  918, 2739,
          439,  519, 2739, 2423,  431,  661,  918,  568, 1341, 2560,  601, 2324,
          533, 1713, 2240, 1057,  257,  940,  377, 2205, 2551,  209, 2541,  151,
         2295, 2503,  307, 2111,  853, 2796, 1414,  519,  814, 1649, 2855,  839,
         1123, 1943,  533, 2305, 2305,  250, 2092, 2324, 2593, 1057, 2593,  998,
         2128, 1153, 2541, 1011, 2757, 1011, 2757, 1420, 1074,  531,  531, 2010,
         1485, 1927,  532, 2514, 2289, 1681, 2653, 1375, 1565,  250, 1188, 1126,
         1876, 2424, 1062, 2424, 2254, 1275,  415,  110, 2312,   24, 1430, 2871,
          499, 2770, 2770, 2770, 1767, 2094,  882, 1670, 1670,  119, 1582, 2154,
         2966,  878, 2513,  866,  818, 1112,  818, 1275,  818,   49, 2001, 2001,
          803,  359, 1462, 2094, 2094, 2808, 2808, 1200, 2808, 1008, 1112,  122]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0018, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[2083, 2520, 1358,  ..., 2383, 2383, 2383],
        [ 376, 2170, 1432,  ..., 1725, 1725, 1068],
        [2648, 1876, 2648,  ..., 2903, 2903, 2287],
        [1137, 1631,  999,  ..., 2821, 2821, 2541]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0006, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0221, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[ 971, 2319, 2750,  ...,  548,  612, 2424],
        [ 562,  562,  234,  ..., 1249, 1249,  995],
        [1330, 2656, 1025,  ..., 1949, 1607, 1949],
        [1405, 2818, 1618,  ...,  769, 1907, 1153]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0013, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0128, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1591,  0.0626, -0.0265],
         [ 0.1380,  0.0192, -0.0446],
         [ 0.1071,  0.0206, -0.0652],
         ...,
         [-0.1634,  0.0269,  0.0948],
         [-0.1495, -0.0120,  0.0879],
         [-0.1755,  0.0031,  0.1155]],

        [[ 0.1624,  0.0611, -0.0144],
         [ 0.1437,  0.0248, -0.0265],
         [ 0.1196,  0.0286, -0.0433],
         ...,
         [-0.1697,  0.0285,  0.0942],
         [-0.1534, -0.0093,  0.0875],
         [-0.1805,  0.0029,  0.1146]],

        [[ 0.1363,  0.0730, -0.0378],
         [ 0.1395,  0.0447, -0.0413],
         [ 0.0976,  0.0278, -0.0675],
         ...,
         [-0.1534,  0.0287,  0.0911],
         [-0.1370, -0.0103,  0.0869],
         [-0.1645,  0.0079,  0.1170]],

        [[ 0.1274,  0.0559, -0.0296],
         [ 0.1181,  0.0227, -0.0394],
         [ 0.0859,  0.0130, -0.0593],
         ...,
         [-0.1513,  0.0347,  0.0971],
         [-0.1316, -0.0031,  0.0876],
         [-0.1606,  0.0139,  0.1187]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.1436,  0.0192, -0.0083],
         [ 0.1135,  0.0398, -0.0629],
         [ 0.1371,  0.0406, -0.0183],
         ...,
         [-0.0741, -0.0024,  0.1357],
         [-0.0767,  0.0012,  0.1301],
         [-0.0660,  0.0037,  0.1331]],

        [[ 0.1269, -0.0045,  0.0175],
         [ 0.1139,  0.0174, -0.0258],
         [ 0.1509,  0.0222,  0.0168],
         ...,
         [-0.0881,  0.0015,  0.1173],
         [-0.0896,  0.0035,  0.1140],
         [-0.0797,  0.0045,  0.1182]],

        [[ 0.1372,  0.0209, -0.0445],
         [ 0.1238,  0.0340, -0.0902],
         [ 0.1230,  0.0389, -0.0444],
         ...,
         [-0.0950,  0.0012,  0.1531],
         [-0.0964,  0.0065,  0.1512],
         [-0.0805,  0.0085,  0.1532]],

        [[ 0.1009,  0.0087, -0.0099],
         [ 0.0586,  0.0243, -0.0475],
         [ 0.0880,  0.0415, -0.0103],
         ...,
         [-0.0730, -0.0015,  0.1213],
         [-0.0741,  0.0002,  0.1194],
         [-0.0627,  0.0033,  0.1250]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0078,  0.0231, -0.0287],
         [-0.0307,  0.0235, -0.0553],
         [ 0.0094,  0.0342, -0.1402],
         ...,
         [-0.0701,  0.0077,  0.0591],
         [-0.0683,  0.0035,  0.0749],
         [-0.0663,  0.0094,  0.0416]],

        [[ 0.0179, -0.0025, -0.0143],
         [-0.0154, -0.0005, -0.0339],
         [ 0.0376,  0.0104, -0.1303],
         ...,
         [-0.0603, -0.0038,  0.0759],
         [-0.0613, -0.0067,  0.0907],
         [-0.0564, -0.0018,  0.0569]],

        [[ 0.0281,  0.0307, -0.0027],
         [ 0.0166,  0.0252, -0.0217],
         [ 0.0427,  0.0287, -0.1148],
         ...,
         [-0.0870, -0.0151,  0.0800],
         [-0.0887, -0.0162,  0.0903],
         [-0.0834, -0.0145,  0.0633]],

        [[ 0.0179,  0.0127,  0.0195],
         [-0.0185, -0.0054,  0.0062],
         [ 0.0186,  0.0112, -0.0989],
         ...,
         [-0.0288, -0.0227,  0.0726],
         [-0.0297, -0.0250,  0.0893],
         [-0.0238, -0.0209,  0.0513]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[2339, 2374, 2048, 2033, 2048, 1341,  154,  337,  670,  307, 1834, 1724,
         1387, 2153, 1095,  281,  831,  831, 2447,  154, 1095, 1095, 1095,  454,
         2361, 1362, 2361, 2361,  186, 2958, 1626, 1591, 2382, 1851,  976, 2824,
         2141,    7, 2385, 1662, 1662, 1195,  246, 2048, 1390,  625,  380,  231,
          794, 1095, 1840, 1840, 2418, 2418, 2590, 1646, 1943, 1301, 2590, 1150,
          461, 1150,  801, 1400, 2063, 1575, 2742, 1006,  420,  944, 1545, 1796,
         1812,  583,  583,  625,  583, 1138,  231, 1138, 1226, 1226, 2452,  568,
          562,  568,  562, 1765, 2330,  809,  927, 2341, 2867,  245,  126, 2497,
         2405, 1812, 2817,  466, 1790,  524, 1386,   59, 2452, 2452, 1356, 1934,
         2452, 1987, 2819, 2998, 2772, 2858, 1442, 2617, 2090, 2341, 1401,  528,
         2021, 2899,  106,  917,  811,  675,  474, 1830, 2623, 2677,  500, 2460,
          687, 1555, 1698, 1359, 2025, 1893,  754, 1936, 2090, 2910, 2910, 2971,
         2090, 2025,  124,  675,  956, 2621,  853, 1539, 2177, 1418,  923, 2683],
        [1908, 1959, 1051, 1051,  363, 1051, 1975, 2567, 1927, 2083, 2083, 1051,
         2083, 1927,   51,  161,  961, 2677, 2265, 2400, 2161, 1615, 2293, 2591,
         1377,  812, 1377, 1377,  999, 1577, 2536, 1673,  522,  504, 1982,  283,
         2916,  283, 1051,  326,  504, 2710, 1982, 1051,  809, 1868, 2480, 1535,
         1868, 1026,  387, 1861,  108, 1734,  587, 2261, 2319, 1518,  467, 2279,
         2418, 1004,  543, 1379, 1781, 1781, 1540,  202,  609, 1781, 1781, 1781,
         1781, 1118,  901,  366, 1118,  328, 1535,  328, 1336, 1817, 1817, 2534,
         2529, 2318, 1520,   10, 1526,   10,   10, 1806, 1781, 2876, 2876, 2876,
         1948, 1606, 1997, 1790, 2324, 1213, 1606, 1762, 2767, 1795, 2290,  550,
         2726, 1388,  348,  395, 2766,  538,  881,  538,  985, 2118, 1983, 1417,
         2825,  472, 1083,  819,  274, 2231, 1344, 1232, 1266, 2647,  776, 1785,
         2647, 2063,  980, 1578, 1099,  437,  907, 1028,  119,  855,  855,  855,
          874,  985, 2707,  126,  983, 1728, 2169,  211, 2678,  211,  119, 2476],
        [2206, 1134,  998, 2832,  122,   78,  256, 1927,  477, 2995,  486, 2302,
         1223,  435, 1841, 1842, 1931,  426,  601,  910, 2203,  345, 1088, 1668,
          578, 2840, 2660,  631, 2299,  296, 1326, 2089, 1326, 1031, 1172,  794,
         2161, 1588,  972,  497,  881, 2723, 1688,  958, 2790,  533,  372, 2867,
          665, 1604,  619,  210, 1959, 2199, 2310, 2772, 1393, 2428,   30, 2997,
          414, 1992,  414,  776, 1313, 1301, 2472, 2365, 1800, 1513,  581,  905,
         1942, 1703, 1404,   44, 1315, 2616,  620,  550, 1779, 2163,  531, 1236,
         1387, 1108,  646, 2959,  414, 2959, 1992, 2377, 1994,   34,  338,  338,
         2063,  411, 2780,  469, 2229, 1163, 1971,  214, 1437,  112, 1417, 2285,
         1084, 1100, 1282, 1275,  685, 2167,  387,  609, 1619,  638,  273, 2229,
          769, 1321, 1983, 2674, 2358, 2547,  493, 2534, 2087,  434, 2909,  913,
         1247,  217,  530, 1678, 1155, 1275, 1578, 2649, 1578, 1080, 2357,  472,
         1578, 1628, 1338, 2547, 2630, 2547, 2547, 1847,  871, 1873, 1155, 2495],
        [1638,  831, 1008, 2117,  406, 1008,  173, 2966, 1939,  574, 2435, 2117,
         1583, 1939, 2271,  793, 2522, 2500, 2319, 2605,  717,  893, 2261,  841,
         1012, 1130, 2576, 1590, 2049,  255, 1306, 1941, 2249,  406, 1008, 2335,
         1124,  987, 2481, 1831, 2591, 2710, 1008, 1008, 1420, 1860, 2795,  896,
         1860, 1069, 1768, 1780, 1701,  544, 2788, 1010, 2421, 1275, 2755, 1493,
           23, 2755, 2755, 2755, 1445, 1420, 2151, 2335, 1546,  459, 2875,  789,
         1835,  899,  607,  461,  899,  669,  896,  669, 1411,  865, 1398, 2200,
          526,  584, 1722,  288, 2650,  273,  288,  902, 2201, 2242, 1519,  821,
         1519, 1835,  524,  551,  877, 1252,  752, 1166, 2099, 2119, 1145,   56,
          599, 1349, 1340,  273,  288,  273,  902, 1333, 1333,  902,  877,  186,
         1227,  241,  985,  985, 1049, 1122, 1166,  888, 2754, 2328,  609, 1622,
          448, 2544,  273,  914,  902,  908, 2600,  273, 2600, 1555, 1555,  902,
         1333, 1333, 1555, 1122,  437, 2423,  501, 2600, 2961,  945, 2579, 1422]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0017, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[1973,  871,  670,  ..., 1924, 1924, 2760],
        [1277, 1051,  365,  ...,  538, 2254,  419],
        [ 331, 2200, 2302,  ..., 1964, 1892, 2354],
        [ 574, 1420,  325,  ...,  273,  273,  288]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0005, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0199, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2634, 1603, 1368,  ..., 2632, 1300,  847],
        [2050,  555,   42,  ...,  683,  419,  878],
        [ 545,  545, 1429,  ..., 2765, 1275, 1051],
        [   3, 1717, 2347,  ..., 2717, 2717, 2336]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0009, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0110, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.0764,  0.0132, -0.0568],
         [ 0.0516, -0.0233, -0.0651],
         [ 0.0265, -0.0470, -0.0814],
         ...,
         [-0.1367,  0.0393,  0.1090],
         [-0.1239, -0.0049,  0.1016],
         [-0.1519,  0.0143,  0.1341]],

        [[ 0.0854,  0.0144, -0.0669],
         [ 0.0646, -0.0233, -0.0699],
         [ 0.0324, -0.0492, -0.0850],
         ...,
         [-0.1435,  0.0274,  0.0982],
         [-0.1305, -0.0161,  0.0935],
         [-0.1583,  0.0027,  0.1248]],

        [[ 0.1559,  0.0460, -0.0440],
         [ 0.1318,  0.0033, -0.0599],
         [ 0.1012, -0.0037, -0.0772],
         ...,
         [-0.1573,  0.0133,  0.0979],
         [-0.1430, -0.0233,  0.0892],
         [-0.1710, -0.0091,  0.1207]],

        [[ 0.1545,  0.0479, -0.0442],
         [ 0.1368,  0.0110, -0.0521],
         [ 0.1067,  0.0101, -0.0696],
         ...,
         [-0.1523,  0.0229,  0.1006],
         [-0.1338, -0.0147,  0.0959],
         [-0.1684, -0.0018,  0.1210]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0514,  0.0592, -0.0712],
         [-0.0836,  0.0965, -0.0474],
         [-0.0316,  0.0969, -0.0009],
         ...,
         [-0.1011,  0.0261,  0.1140],
         [-0.1010,  0.0333,  0.1188],
         [-0.0840,  0.0371,  0.1308]],

        [[-0.0199,  0.0477, -0.0945],
         [-0.0600,  0.0772, -0.0870],
         [-0.0187,  0.0821, -0.0336],
         ...,
         [-0.1107,  0.0328,  0.1307],
         [-0.1125,  0.0400,  0.1353],
         [-0.0938,  0.0443,  0.1451]],

        [[ 0.1127,  0.0216, -0.0568],
         [ 0.0679,  0.0472, -0.1215],
         [ 0.0946,  0.0518, -0.0655],
         ...,
         [-0.1047,  0.0101,  0.1072],
         [-0.1023,  0.0134,  0.1048],
         [-0.0890,  0.0174,  0.1080]],

        [[ 0.0958,  0.0297, -0.0836],
         [ 0.0567,  0.0469, -0.1202],
         [ 0.0922,  0.0528, -0.0659],
         ...,
         [-0.1012,  0.0011,  0.1304],
         [-0.1014,  0.0060,  0.1274],
         [-0.0853,  0.0079,  0.1302]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0623, -0.0228,  0.0850],
         [-0.1316,  0.0166,  0.1047],
         [-0.1005,  0.0299, -0.0040],
         ...,
         [-0.0480, -0.0110,  0.0907],
         [-0.0424, -0.0143,  0.1035],
         [-0.0452, -0.0098,  0.0720]],

        [[-0.0456, -0.0151,  0.0607],
         [-0.1094,  0.0103,  0.0780],
         [-0.0803,  0.0258, -0.0287],
         ...,
         [-0.0792, -0.0051,  0.0899],
         [-0.0744, -0.0088,  0.0977],
         [-0.0764, -0.0043,  0.0726]],

        [[ 0.0166, -0.0054, -0.0250],
         [-0.0522, -0.0229, -0.0013],
         [-0.0049, -0.0039, -0.1153],
         ...,
         [-0.0941, -0.0021,  0.0725],
         [-0.0926, -0.0035,  0.0795],
         [-0.0906, -0.0002,  0.0537]],

        [[ 0.0140,  0.0023,  0.0162],
         [-0.0282, -0.0119,  0.0097],
         [ 0.0252,  0.0054, -0.1023],
         ...,
         [-0.0658, -0.0144,  0.0762],
         [-0.0638, -0.0175,  0.0861],
         [-0.0624, -0.0128,  0.0575]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[2937,  706, 2875,  706,  706, 2875, 2933, 1615,  294,  706,  706,  706,
          706, 2704, 1018, 1432,  271,    6, 1928, 2380, 1680, 1291, 1440, 1691,
         1691, 1691, 1691, 1691, 1691, 1795, 1795, 1795, 2903,  317, 2875, 2875,
         1553,  988, 1553,  670, 2245, 2704, 2875, 2875, 1460, 1859, 2310, 1567,
         1631, 1440, 2215, 1691, 1795, 1962, 2903, 2903, 2903,  704, 2577, 2964,
          704,  704,  704,   35, 2875, 1553, 1171, 1553, 2333,  895, 2338, 2668,
          870, 1632,  733, 1657, 1308, 1433, 1682,  503,  918, 1930,  642, 1795,
         2964, 1795, 2964,   35,  698,   35,  698,  614,  739, 1171,  160, 1171,
          559,  718, 1883,  581, 1879, 1888, 1692, 2134,  987, 1819, 1504, 2862,
          147,  965,  607, 1503,  704,   35,  614,  614,  614,  614, 1392, 2423,
         1415,  717,  360, 1700, 1995,  980, 2134,  941, 2180,  877,  595,  445,
         2164,  943,  661, 2770,  614, 1981,  614,   35, 1981,  206,  206,  206,
          614,  614,  206,  876, 1325, 1685,  959, 2427,  656,   52, 1981, 1272],
        [2228,  646,  761,  553,  761,  761, 2082, 1237, 2592,  945, 1182,  646,
         1676, 1399,  219,  597,  830, 1884, 2641, 2641,  227,  552,  227, 1989,
         2092, 2092,  726, 2092,  726,  726,  726,  726,  763,  646, 2764, 2721,
         1016, 1951,  523,  893,  394, 2306, 1532, 2703, 2702, 1018, 1398,  960,
          686, 1944, 2756, 1401, 1023, 1401, 1618,  763, 1618,  505, 1618, 1618,
         1402, 1402, 1402, 1402, 2702, 2032, 1009, 1951, 1136, 1280,  820,  387,
         1995, 2948,  970,  105,  128, 2501,  436, 2133, 1401, 1401, 1401, 1651,
          205, 1651,  205, 2052, 1402, 2052, 1402, 2052,  641, 1881, 1720, 2032,
         1834, 1333,  841, 2766,  356,  961, 2251, 1932,  667,  979,  410, 1651,
          528, 2726,  205, 2052,  505, 2052, 2052, 2052, 2052, 2052, 2766, 1191,
         2412, 1613, 2372, 1626,  247,  972, 1932, 1455, 1207, 2521, 2294, 2467,
          266, 1684, 2726, 1868,  771,  771, 1684, 2726, 1684,  771, 1684,  771,
         1684, 1684, 1684, 2029, 2725,  266,  972, 2467,  899,  266,  771,  771],
        [1579, 2988, 2621, 1513, 1138, 2121,  983, 1588, 1355, 1115,  133, 2703,
         2703, 1355,  305,  906,   31,  633,  633, 1460, 1460, 1460,   31, 1752,
         1752, 1599, 2662, 1752, 1752, 2821,  118,  118, 2421, 1812,  534,  946,
         2479,  229, 1353, 1588, 2703, 2199, 1368, 1048,  160,  843, 2703,  906,
          843, 1460,  645,  645,  645, 2618, 2532, 2532, 2532, 2532, 2532, 2532,
         2532, 2532, 2532, 2532, 2423,  916,  762,  900, 1047, 1608, 2665, 2629,
         2665,   54,   54,   54,   54,   54,  906,   54,  645,  645,  645, 2532,
         2532, 2697, 2532, 2532, 2532, 2532, 2532, 2098,  962,  262,  262, 1001,
         1532, 2665,  468, 2473,  174, 2393,   54, 1360, 2911, 2911, 1360,  258,
         2697, 2532, 2532, 2532, 2532, 2532,   34,   34,   34,   34, 2941,  911,
         2741, 1995, 2045, 2045, 2271, 2045, 1360, 2352, 2352,  497, 1112,   19,
           19,   19, 2532,  390,   34,   34, 2623, 2532,   34, 2623, 2623, 2623,
           34,   34, 2623, 2880,  748,  390,  390, 2623,  390,  390, 2623, 2623],
        [1164,  913,  309,  954, 1181,  703, 1598, 1360, 2014, 2766, 2766, 2333,
         2333, 2390, 2610,  433,  554,  355,  333, 1030,  152, 1527,  631,  427,
          884, 1737,  294, 1176, 1235, 2889, 1212,   62,  995,  309, 2372,  456,
          456, 2998, 1205, 2879, 1668,   80, 1108,  309,  478, 2723, 1089, 2894,
         2186,  303, 2167, 2143, 1425, 2737, 2176,  944, 2423,  716, 1768, 2178,
          810, 2511,  810,  624, 2537, 2537,  243, 1205, 2998,  313, 1197,  767,
          425, 2296, 2296, 2109, 1828, 2988, 2177, 1232, 2166,  890,    9,  958,
         1849, 2980, 1779, 1229, 2328, 1229, 1459,  782, 1414,  531,  217, 1522,
         2471, 1960,  547, 2091,  396, 1134, 1966, 1693,  620, 1837, 1273, 2980,
         1893,  543, 2758,  352, 1404, 1977, 1157,  423, 2774,  896, 1201, 1044,
          311, 1545, 1629,  301, 2363, 2533, 1916,  409, 2514, 2250, 1511, 2603,
         1321, 1024, 1794, 1355,  923, 1969, 2712, 1794, 2141,  945, 1172, 1569,
         2712, 2720, 2838, 2533,  376,  595, 1817, 2587, 2011, 1320, 2689, 2570]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0017, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[ 523, 2962, 2481,  ..., 1206, 1867,  661],
        [ 108, 1512,  169,  ..., 1868, 1868, 1868],
        [1513, 2364,  251,  ...,  401, 2824, 2532],
        [2372, 2944, 1735,  ..., 1794, 2755,  543]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0212, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[  24, 2429, 1156,  ..., 2577, 2577, 2577],
        [1402,  771,  425,  ..., 2052,  505, 2052],
        [ 192,  777,  167,  ...,  401,  401,  401],
        [1882, 2807, 2998,  ..., 2881, 2422,  211]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0010, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0099, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1014,  0.0053, -0.0892],
         [ 0.0860, -0.0290, -0.0911],
         [ 0.0461, -0.0555, -0.1013],
         ...,
         [-0.1340,  0.0121,  0.0948],
         [-0.1233, -0.0293,  0.0853],
         [-0.1493, -0.0146,  0.1160]],

        [[ 0.1275,  0.0210, -0.0831],
         [ 0.1158, -0.0113, -0.0840],
         [ 0.0727, -0.0392, -0.0920],
         ...,
         [-0.1423,  0.0146,  0.0960],
         [-0.1277, -0.0231,  0.0883],
         [-0.1562, -0.0082,  0.1206]],

        [[ 0.1615,  0.0547, -0.0520],
         [ 0.1601,  0.0253, -0.0571],
         [ 0.1200,  0.0147, -0.0739],
         ...,
         [-0.1511,  0.0131,  0.0924],
         [-0.1353, -0.0196,  0.0862],
         [-0.1657, -0.0067,  0.1202]],

        [[ 0.0984,  0.0050, -0.0854],
         [ 0.0848, -0.0289, -0.0909],
         [ 0.0445, -0.0549, -0.1046],
         ...,
         [-0.1296,  0.0177,  0.0950],
         [-0.1192, -0.0261,  0.0867],
         [-0.1435, -0.0074,  0.1198]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0134,  0.0490, -0.1639],
         [-0.0109,  0.0765, -0.1775],
         [ 0.0068,  0.0835, -0.1026],
         ...,
         [-0.1199,  0.0433,  0.1087],
         [-0.1167,  0.0501,  0.1153],
         [-0.0957,  0.0534,  0.1247]],

        [[ 0.0230,  0.0528, -0.1662],
         [-0.0072,  0.0764, -0.1820],
         [ 0.0110,  0.0782, -0.1108],
         ...,
         [-0.1189,  0.0203,  0.1045],
         [-0.1167,  0.0292,  0.1089],
         [-0.0979,  0.0324,  0.1163]],

        [[ 0.0916,  0.0375, -0.1190],
         [ 0.0602,  0.0526, -0.1553],
         [ 0.0868,  0.0539, -0.1019],
         ...,
         [-0.1115,  0.0019,  0.1161],
         [-0.1099,  0.0050,  0.1157],
         [-0.0928,  0.0079,  0.1202]],

        [[-0.0067,  0.0628, -0.1503],
         [-0.0260,  0.0937, -0.1523],
         [ 0.0113,  0.0917, -0.0974],
         ...,
         [-0.1108,  0.0416,  0.0920],
         [-0.1067,  0.0480,  0.0953],
         [-0.0856,  0.0520,  0.1039]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0324, -0.0239,  0.0219],
         [-0.0762, -0.0029,  0.0210],
         [-0.0512,  0.0200, -0.0809],
         ...,
         [-0.0985, -0.0016,  0.0792],
         [-0.0959, -0.0047,  0.0876],
         [-0.0951,  0.0002,  0.0552]],

        [[-0.0377, -0.0061,  0.0104],
         [-0.0905,  0.0105,  0.0271],
         [-0.0574,  0.0239, -0.0739],
         ...,
         [-0.0768, -0.0174,  0.0768],
         [-0.0746, -0.0200,  0.0856],
         [-0.0740, -0.0155,  0.0589]],

        [[ 0.0201, -0.0137, -0.0111],
         [-0.0340, -0.0043, -0.0091],
         [ 0.0119,  0.0024, -0.1046],
         ...,
         [-0.0728, -0.0259,  0.0765],
         [-0.0736, -0.0275,  0.0857],
         [-0.0693, -0.0246,  0.0583]],

        [[-0.0421, -0.0153,  0.0292],
         [-0.0840,  0.0014,  0.0388],
         [-0.0408,  0.0145, -0.0794],
         ...,
         [-0.0866, -0.0063,  0.0698],
         [-0.0835, -0.0092,  0.0793],
         [-0.0821, -0.0052,  0.0471]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[ 780,  736,  938,  401, 1226, 1245, 1409, 2793,  529, 1506, 1506, 2231,
          485, 1558,  860, 1409, 1409, 2933, 1246,  633,  860, 2785,  905, 2691,
         2785,  671,  687,  887, 1792,  355,  673, 1853,  178, 2930,  300, 1968,
         1453, 2533, 1453,  529, 1558,   98, 1064,  938, 1932,  869,  529, 1766,
          869,  492,  887,  811, 1018,  673,  737, 2013,  737,  737,  737,  101,
         1780,  737,  737,  737, 1156, 2690, 2088, 1098, 2751, 2004,  149,  642,
          582,  529,  869, 2797, 2249, 2870, 1502, 2944,  342, 2419,  342, 1018,
         1018, 2676,  737,  737,  737,  737,  737,  737,  472,  438, 2597, 1493,
         2084,  212, 1866,   12, 2615, 1854,  810, 2222, 2035, 2293, 1607, 1967,
         2676, 1018, 1018, 2209,  737,  737,  737, 2209,  737, 2209, 1320, 1728,
          274, 2615, 2615, 2615,  163, 2269, 2222, 2269, 2269, 2269, 1607, 2269,
         2269, 1607,  737, 1607, 1607, 1607, 1607,  737, 1607, 1607, 1607, 1607,
         2209,  737,  737, 2269, 2637, 2269, 2269, 1607, 2269, 2269, 1607, 1607],
        [2585,   50, 2440, 2522, 2128, 2057, 2522,   50,   50, 2057, 2522, 2522,
         2522, 2522, 1320, 1320, 1320, 1320, 1320, 1320,  623, 2551,  623,  623,
         2551, 2551, 2104, 2104,  939,  939,  939,  939, 1698, 1170, 2431, 1773,
          411,  617, 1490, 2585, 2522, 2740, 1580, 2522, 2107, 2057, 2522, 1320,
         1320,  623,  939, 2551,  939,  939,  939,  939,  939,  939,  939, 2798,
         1864, 1864, 1864, 2798, 1256,  641, 1668, 1490,  971,  550, 2982, 1071,
          751, 2137, 1320, 2057, 1646,  623,  623,  623,  368,  368,  368,  939,
          939,  368,  939, 1864, 2160, 1864, 2160, 2160, 2857,  503,  503, 2373,
          797, 1646, 2807, 2649, 1928,  703,  703,  219,  207,  207,  368,  368,
          368,  784,  939,  939,  939,  939, 2160, 2160, 2160, 2160, 1928, 2957,
          207,  597, 2724,  422, 2680, 1866,  219, 1206, 2724, 2973,  784, 1206,
         2973, 1236,  784, 1236, 2160, 1204, 1204,  939, 1236, 2160, 2160, 2160,
         2160, 2160, 2160, 1206, 1438, 1866, 2518, 1204, 1920, 1920, 1204, 2160],
        [2392, 2724,  310, 2784, 1232, 2984, 2596, 1020, 2090,  346, 2220, 2119,
         2220, 2686,  355, 2941, 1687,   36,  183,  446,  292,  844, 2146,  841,
         2217, 2199, 2484, 2217, 1461,  902,  643,  630,  984,  357,  357,  736,
         2785, 2891, 2946, 1315, 1108, 2861, 2107,  530, 2785, 2902, 2791, 2714,
         2627,  713, 1546, 1373, 1320,  835, 2863,  666, 1637, 2042, 1904,  336,
          247, 2205, 2244,  586, 2260, 2891, 1055, 2946, 2891, 1055,  147, 2823,
         1667, 1372, 1179, 2996, 1753,  173, 2115, 2141, 1994, 1504, 1994, 2301,
         1394, 2262, 1698, 2110,  751,  219, 2267, 2829,   99,  664,  664, 2423,
          124,  748,  654, 1654, 1362,  472,  490, 2957, 2588,  871, 2536, 1200,
         1101, 1847,  166,  943, 1023,  374, 2547, 2174, 1920,  615, 1362, 2514,
          781,  764, 2901, 2704, 1754, 1249, 1277, 1118, 1118, 2928, 1980,  137,
         1249, 1217, 2325, 2376,  685, 2349,   25, 1969, 2047,  912,  912,  433,
          572, 2969,  305,  417,  774,   32,   32, 2677, 2593, 1666, 2349, 1305],
        [ 310,  121, 1527,  121, 1443, 1691, 1244, 2282, 1935, 2665,  193, 2793,
         2282, 1935, 2739,  360,  360,  360,  670,   56, 2739,  237, 1910, 1063,
         2638, 1910, 2275, 2415, 2576, 1353,  850,  445, 2484, 1488,   31, 1527,
          563, 2849, 1017, 1207, 2282,  310, 1443, 2546, 1560, 1244, 1207,  464,
          564, 2739, 2636, 2030, 2335,   40, 1664, 2988, 1158,  207, 1664, 2633,
         2154, 1158, 2540, 2540, 2424,  127, 1037, 1562, 2384, 1973, 2096, 1061,
         2138, 1878, 1878, 2123,  464,  503,  464,  503, 2639, 2639, 2030, 2335,
         2335,  179, 2751, 1158, 2540, 1158, 2540, 2540, 1008,  769, 1646, 1521,
         2914, 2138, 2830,  472, 2683, 1395,  786, 2093,  503,  503, 2093,  813,
         2575, 1839, 2335, 1839, 1839,  908, 1158,  908, 1158,  908, 1269, 1829,
         1395, 1391, 1391, 1434, 1434, 2093, 2093, 2093, 2093, 2977,   54,  108,
         2093, 2740, 1839, 1839, 1839, 2212, 1839, 1839, 1839,  908,  908,  908,
          908, 1158, 1158, 2093, 2632,  108, 2093, 2740, 1869, 2212, 2740, 1839]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0018, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[1759,  888,  334,  ..., 2269, 2269, 1607],
        [ 629, 1970, 1074,  ..., 1236, 1236, 1236],
        [ 709,  613,  709,  ...,  991,  991, 1580],
        [2668, 2804, 1452,  ...,   54,   54,   54]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0008, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0227, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[2164,  190, 2564,  ..., 1607, 1607, 2269],
        [ 368, 1369, 1121,  ...,  784,  939,  784],
        [1041,  879, 2891,  ...,  628, 1045,  377],
        [1744, 2977,  472,  ..., 1805, 2212,  108]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0011, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0118, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1322,  0.0165, -0.0802],
         [ 0.0985, -0.0205, -0.0885],
         [ 0.0725, -0.0331, -0.0938],
         ...,
         [-0.1464,  0.0374,  0.0983],
         [-0.1374, -0.0097,  0.0912],
         [-0.1634,  0.0086,  0.1243]],

        [[ 0.1445,  0.0187, -0.0915],
         [ 0.1194, -0.0194, -0.1004],
         [ 0.0840, -0.0375, -0.1067],
         ...,
         [-0.1354,  0.0121,  0.0853],
         [-0.1267, -0.0271,  0.0778],
         [-0.1485, -0.0133,  0.1093]],

        [[ 0.1515,  0.0372, -0.0609],
         [ 0.1461,  0.0112, -0.0641],
         [ 0.1057, -0.0081, -0.0820],
         ...,
         [-0.1235,  0.0374,  0.0951],
         [-0.1047, -0.0020,  0.0890],
         [-0.1386,  0.0079,  0.1069]],

        [[ 0.1317,  0.0183, -0.1108],
         [ 0.1224, -0.0137, -0.1114],
         [ 0.0719, -0.0444, -0.1163],
         ...,
         [-0.1021,  0.0204,  0.0866],
         [-0.1080, -0.0264,  0.0770],
         [-0.1244, -0.0076,  0.1100]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-0.0225,  0.0697, -0.1739],
         [-0.0943,  0.0974, -0.1295],
         [-0.0396,  0.0888, -0.0927],
         ...,
         [-0.1305,  0.0245,  0.0777],
         [-0.1345,  0.0310,  0.0882],
         [-0.1232,  0.0353,  0.0993]],

        [[ 0.0659,  0.0455, -0.1991],
         [ 0.0188,  0.0756, -0.2356],
         [ 0.0406,  0.0786, -0.1753],
         ...,
         [-0.1331,  0.0203,  0.0619],
         [-0.1328,  0.0251,  0.0716],
         [-0.1149,  0.0285,  0.0832]],

        [[ 0.0512,  0.0408, -0.1574],
         [ 0.0248,  0.0582, -0.1772],
         [ 0.0394,  0.0606, -0.1264],
         ...,
         [-0.1076,  0.0027,  0.0631],
         [-0.1091,  0.0055,  0.0672],
         [-0.0965,  0.0076,  0.0752]],

        [[ 0.0588,  0.0484, -0.2137],
         [ 0.0463,  0.0688, -0.2312],
         [ 0.0575,  0.0758, -0.1630],
         ...,
         [-0.1075,  0.0161,  0.0533],
         [-0.1044,  0.0219,  0.0638],
         [-0.0831,  0.0258,  0.0736]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[-5.0446e-02,  2.2194e-02, -1.5531e-02],
         [-1.2495e-01,  6.6784e-02,  1.2560e-02],
         [-8.5163e-02,  6.4228e-02, -7.1198e-02],
         ...,
         [-2.7235e-03,  1.4151e-02,  9.1020e-02],
         [ 3.4723e-03,  1.5611e-02,  1.0405e-01],
         [ 1.3991e-04,  1.4256e-02,  7.6543e-02]],

        [[ 2.8639e-03, -2.9165e-02, -2.3922e-02],
         [-6.7412e-02, -1.3211e-02, -2.2350e-02],
         [-1.9623e-02, -9.3810e-04, -1.4257e-01],
         ...,
         [-5.3866e-02,  1.1188e-02,  4.2214e-02],
         [-5.0001e-02,  7.8399e-03,  5.1685e-02],
         [-5.1921e-02,  1.1634e-02,  3.1745e-02]],

        [[ 2.0388e-02, -2.2026e-02, -5.7429e-03],
         [-2.1109e-02, -1.9693e-02, -1.0511e-02],
         [ 1.1808e-02, -8.1185e-03, -1.0364e-01],
         ...,
         [ 2.4554e-03, -2.9176e-02,  8.5495e-02],
         [ 6.9028e-03, -3.1642e-02,  9.8364e-02],
         [ 6.5144e-03, -2.7824e-02,  6.7267e-02]],

        [[ 1.0022e-02, -3.3743e-03, -1.1035e-03],
         [-1.8913e-02, -3.3993e-03, -1.1470e-02],
         [ 1.6925e-02,  1.0941e-02, -1.4258e-01],
         ...,
         [-2.7550e-02, -2.9394e-02,  5.5712e-02],
         [-2.6926e-02, -3.2706e-02,  7.8059e-02],
         [-2.0665e-02, -2.7356e-02,  2.8913e-02]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[ 365,  365,  365,  365,  365,  365, 1293,  365,  365,  365,  365,  365,
          365,  365, 1532, 1234,  365,  365,  365, 1234, 1234, 2993, 1234,  365,
          365, 1234,  365,  365, 1426, 2886,  365,  315,  365,  365,  365, 2373,
         2373, 2373, 2373, 1293,  365, 1234, 2373,  365,  365, 1410, 1885, 1293,
         1885, 1234, 1532, 1084, 1330,  131,  315,   81, 1891, 1568,  315,   23,
         2447,  353, 2447,  353, 1715, 1715, 2373, 2373, 2373, 1185, 2502, 2078,
         2078, 1410, 1410, 1293, 1410, 1293, 1293, 1084,  182, 2738,  182,  384,
          911, 2242,  705,  158, 1226,  121, 2371,  121,  687,  869, 1185, 1185,
         1185, 2078,  687,  999,  999,  146, 2502,    7,  146, 2934,  557, 2441,
         1410,  482,  834,  252, 2852, 2736, 2071,  121,  121, 2071,  999, 1298,
            7,  926,  776,  776,  776, 1874, 1218,  393,  776, 2463,  479,   26,
            9, 2944, 2708, 2522,  552,  886, 2259,  376, 2259,  552,  552,  552,
         2401, 2958, 2401, 1910, 2197, 1308,  525,  931,  347, 2407, 2353, 1502],
        [2153,  955, 1632, 1632, 1632, 1632, 1103, 2595, 2153, 2147,  955, 1632,
         2147,  579, 1990, 2595,  528,  504,  955, 2153, 2965, 1871,  743,  955,
         2686, 1969, 1242, 2319, 2254,   99,  432, 1597,  976, 1632, 1632, 1632,
         1632, 1632, 1632, 1705,  579,  304, 1632, 1632, 1632,  604, 2250,  283,
         1084, 2003,  121, 2189, 1359, 1119, 1143,  846,  213,  393, 2184, 2943,
         2850, 2842, 1604,  706,  684, 1632, 1632, 1632, 1632, 1578, 1039, 1403,
         2391, 2517, 2517, 2189, 2189,  916, 2189, 2189,  916,  903,  916,  686,
         1850, 2105, 1651,  946,  446, 1248,  446, 1573,  285, 1974, 1974, 1974,
         1974,  318, 2141, 1737, 2026, 1259,  201, 2543, 1259, 1259, 2955,  995,
          403, 1591, 1591, 2948, 1591, 2948, 1513, 1155, 2948, 1513, 1471,   55,
         1259,  863, 1613, 1179, 2358,  812, 1567, 2116,  524, 2194, 1971, 1416,
         2632, 1199, 1451,  170, 2664,  120, 2664, 1155,  637, 2664, 2664, 2664,
         2828, 2828, 2828,   13,  531, 1251, 1534, 1596, 1803,  580,  120, 1596],
        [ 965, 1383,  127, 1123,  147, 2857,   32,  882,  732, 1210, 2047, 2628,
         2047, 1924, 1151, 1008, 1008, 1008,  221,  221, 1151, 2587, 2811, 1547,
         1443, 1704, 1534, 1127, 2592, 1933, 2421, 1886,  811, 1787,  731, 1224,
         1913, 1750, 1913,  534, 1830, 1746, 1234,  127, 1073, 2241,  772, 2394,
         1779, 2594, 1443,  178, 2248,  378, 1897, 2474, 1012, 2050,  499,  484,
         2913, 2921, 2913, 1621, 1357,  463, 2922, 2596, 2259,  120, 1214,  428,
         1389, 1214, 1214, 2394, 1214, 2394, 2394, 1214,  178, 1467,  178, 2635,
         2432,  644, 2432,  510,  303, 1542,  303,  270,  589, 1493, 2422,  706,
         1952, 1790, 2736,  207,   38, 1844, 2326, 1749, 2619,  666,  337, 2583,
         1962,  478,  984,  806, 2206,  510,  916, 2293, 1327, 1564, 2769, 2731,
          364, 1908, 1484,  567, 2902, 1440, 1749,  359, 1613, 1115,  284,  235,
          106, 1931, 2192, 2192, 2340,  403, 2340, 2114, 1575,  144,  287,  144,
         2073, 1076,  878, 1114, 1670,   29, 1416, 1491, 2155, 2305, 1575,  449],
        [2918,  626, 1150, 1616, 1604, 1882,  837, 2487, 2172,  837,  837, 2672,
          837, 2172, 2703, 1576, 1576, 1576, 1576, 1576, 2703, 2114, 2114, 2703,
         2114, 2114,   27, 2114, 1798,   27,   27,   27,  341, 1975,   78, 2336,
         2187, 1643,  177, 2460,  837,  364, 2017, 2377, 1439,  923, 2504, 2703,
          923, 2114, 2114, 2114,  744,   27, 2149,  744, 2149, 1533, 1608, 2149,
          975, 1533,  975,  975, 2683, 2879,   68, 2525,  972, 2210, 2453,  982,
         1584,  923, 2359,  923, 2388, 2703, 2703, 2585,  744,  744, 2824, 2149,
         1608, 1608, 1533,  175,  175,  175,  175,  175, 2210, 2305, 2550,  774,
          444, 1584,  441, 2950, 2170, 2374,  949,  268,  284,   41,   24, 1608,
          744, 2391, 1533,  175, 1537,  175,  175,  175,  175,  175,  110, 2546,
         1768, 1531, 2519, 1424, 1953, 2391,  284, 2391, 2391,  978, 2391, 1537,
         1731, 1537, 1537, 1537, 2506, 2506, 2506, 2506, 2506, 2506, 2506, 2506,
         2506, 2506, 2506, 2391, 1537, 1537, 1487,  978, 2506, 1537, 2506,  978]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0017, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[  32, 1311,  776,  ..., 2517, 2517, 1512],
        [1632, 2525, 1730,  ...,  844,  844,  643],
        [1454, 1454, 1625,  ..., 1575, 1575, 2941],
        [2020,  331, 2973,  ...,  978, 1537, 1537]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0275, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[1185,  563, 1311,  ..., 1303, 1878,  252],
        [2901,  633, 1974,  ...,  837, 1723, 1506],
        [2565, 1069, 2922,  ...,  109, 2432,  908],
        [2439, 2193,  275,  ..., 1533, 1533, 1842]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0011, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0128, device='cuda:0', grad_fn=<MulBackward0>)
pred_coord is  [tensor([[[ 0.1648,  0.0280, -0.1125],
         [ 0.1460, -0.0056, -0.1178],
         [ 0.1118, -0.0207, -0.1211],
         ...,
         [-0.1260,  0.0126,  0.0677],
         [-0.1164, -0.0269,  0.0633],
         [-0.1382, -0.0119,  0.0911]],

        [[ 0.1491,  0.0478, -0.0617],
         [ 0.1491,  0.0192, -0.0587],
         [ 0.1031, -0.0050, -0.0826],
         ...,
         [-0.0950,  0.0526,  0.1009],
         [-0.1214, -0.0073,  0.0727],
         [-0.1356,  0.0145,  0.1111]],

        [[ 0.1084,  0.0015, -0.1241],
         [ 0.0935, -0.0295, -0.1232],
         [ 0.0550, -0.0531, -0.1288],
         ...,
         [-0.1185,  0.0213,  0.0707],
         [-0.1115, -0.0236,  0.0674],
         [-0.1340, -0.0061,  0.0950]],

        [[ 0.1506,  0.0509, -0.0945],
         [ 0.1511,  0.0281, -0.0922],
         [ 0.1133,  0.0011, -0.1079],
         ...,
         [-0.0900,  0.0402,  0.0692],
         [-0.0591,  0.0110,  0.0755],
         [-0.0749,  0.0284,  0.1044]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0795,  0.0321, -0.2042],
         [ 0.0583,  0.0497, -0.2351],
         [ 0.0816,  0.0584, -0.1715],
         ...,
         [-0.1085, -0.0039,  0.0236],
         [-0.1061,  0.0024,  0.0267],
         [-0.0908,  0.0085,  0.0343]],

        [[ 0.0635,  0.0306, -0.1592],
         [ 0.0405,  0.0405, -0.1869],
         [ 0.0410,  0.0444, -0.1365],
         ...,
         [-0.1058, -0.0064,  0.0909],
         [-0.1056, -0.0047,  0.0971],
         [-0.0915, -0.0033,  0.1036]],

        [[ 0.0042,  0.0422, -0.2204],
         [-0.0167,  0.0598, -0.2217],
         [ 0.0111,  0.0677, -0.1463],
         ...,
         [-0.1100,  0.0111,  0.0376],
         [-0.1061,  0.0178,  0.0473],
         [-0.0847,  0.0235,  0.0594]],

        [[ 0.0681,  0.0220, -0.1499],
         [ 0.0549,  0.0300, -0.1744],
         [ 0.0707,  0.0359, -0.1295],
         ...,
         [-0.0662, -0.0271,  0.0161],
         [-0.0636, -0.0234,  0.0201],
         [-0.0461, -0.0160,  0.0324]]], device='cuda:0',
       grad_fn=<AddBackward0>), tensor([[[ 0.0393, -0.0144, -0.0246],
         [ 0.0042, -0.0118, -0.0370],
         [ 0.0434, -0.0027, -0.1598],
         ...,
         [-0.0383, -0.0272,  0.0309],
         [-0.0370, -0.0296,  0.0477],
         [-0.0332, -0.0248,  0.0063]],

        [[ 0.0561, -0.0328,  0.0018],
         [ 0.0309, -0.0358, -0.0016],
         [ 0.0541, -0.0241, -0.0791],
         ...,
         [ 0.0321, -0.0231,  0.1216],
         [ 0.0342, -0.0252,  0.1314],
         [ 0.0365, -0.0224,  0.1057]],

        [[ 0.0163, -0.0125, -0.0013],
         [-0.0174, -0.0053, -0.0174],
         [ 0.0101,  0.0134, -0.1367],
         ...,
         [-0.0079, -0.0220,  0.0542],
         [-0.0062, -0.0249,  0.0751],
         [-0.0007, -0.0186,  0.0257]],

        [[ 0.0796, -0.0041,  0.0378],
         [ 0.0686, -0.0118,  0.0315],
         [ 0.0974, -0.0020, -0.0805],
         ...,
         [ 0.0363, -0.0648,  0.0386],
         [ 0.0361, -0.0668,  0.0496],
         [ 0.0400, -0.0628,  0.0236]]], device='cuda:0',
       grad_fn=<AddBackward0>)]
idx2 is  tensor([[1974, 1448, 1928, 1928, 1448, 1924,  776, 1974,  307, 1928, 1928, 1928,
         1928, 1448, 1485, 1098, 1448, 2437,  906, 1102,  387,  336,  708, 2695,
         1969, 2824, 2984, 2325, 2194, 1231, 1672, 1453,  400, 1928, 1928, 2937,
         2747, 2937, 2747, 2843, 1278, 1278, 1178, 1928, 1178,  834, 2778,  267,
         2778,  435,  342, 1789, 1568, 1615, 1983,  129, 1381, 2733,  334, 1435,
         1006,  784, 1058,  165, 2937,  134,  491,  134, 1820, 1425, 2817,  449,
         1029, 1271, 1583,  834, 2004, 1789,  759, 2004, 1097, 1305, 1097, 2182,
         2601, 1522, 1594, 1151, 1566,  693, 1740, 1400, 1409, 2726, 2726, 2726,
          769, 1029, 2871, 2719, 1191,  903, 1029, 2590,  729,  907,  953, 1586,
         2573,  461, 1659, 2236,  601, 2127, 1410, 1719,  753,  407, 2252, 2008,
         2945, 2589, 2974,  632, 1022,  592,  612, 2974, 2974, 1275, 2565, 2786,
         1283, 2554, 1556, 2513,  956, 1045,  213,   82,  213,  851, 2949, 1507,
         2014, 1213,  556,  592, 1275, 1828,  782,  538, 2580,  823, 2896, 2487],
        [ 660,   91, 1790, 1276, 1790, 1440,  843, 2612, 2852, 1778, 1778,  711,
         1778, 1436, 1196, 2633, 2633, 2633, 2331, 2331, 1196,  718, 1802, 2417,
          543, 2389, 2316, 1560,  860,  301,  188, 2749, 2919, 1350,  296, 2394,
          425, 2051,  366,   97, 1890, 2602, 1569, 1440, 2388, 1064,  416,  843,
         1239, 2055,  543, 2071, 2410,  979, 2360,  170, 2360,  735, 1197,  753,
         1900, 1078, 1900, 2550, 2575, 1469, 1716,  542, 1909, 1892, 2373,  949,
          649, 1856, 2373, 2213, 1856, 2213, 1935, 2213,  466,  466,  466,  170,
          428, 2892,  428, 2496, 2662, 1579, 2606, 1016, 2796,  966, 1716, 1716,
         1106,  139, 2347, 2241, 2628, 1529, 1529,  139, 2373, 2373, 1916,  762,
         1755, 1135, 1034, 2605, 2986,  172, 2249, 2930, 1307,   62,  708, 2893,
          758, 2959, 2959, 2863, 1878,  275,  139,  275, 2713,  120,  105, 1638,
         1472, 1287, 1103, 1908,  484,  608, 2223,  871, 2223, 2772, 2772,   89,
         1003, 2592, 1360,  275, 1143, 2012, 2843, 1908,  308,  302,  484, 2407],
        [ 550,  263, 1239, 1943, 1890, 2806, 1592, 2094, 1071, 1943,  263, 1943,
         1943, 1071, 1754,  486, 2972, 1517, 1943, 2668, 2919, 1134,  440,  188,
         2632,  961,  599, 2798,  800, 1106,  447, 2689, 2981, 1890, 1890, 1890,
         1890, 2799, 1890, 1986, 1943,  430, 1890, 1239, 1239, 2535, 1092, 2908,
         2732, 2766,  182, 1457, 1925,  674, 2491, 2944, 2151, 1852, 2488, 2760,
         1650,  400, 1237, 1023, 1890, 2799, 1890, 1890, 2799, 2799, 2768, 2061,
          337, 2622, 1671,  211,  271, 2049, 1050, 1036, 1024, 1024,  878, 2180,
         1992,  500,  294, 1327, 1023, 1327, 1023, 1023, 1217, 2799, 2799, 2855,
         2855,  163, 1283,  580,  517,  163, 2203, 1860, 1344, 2494,  862, 2546,
          917,  988, 1605, 1749,  253,  988,  988, 1749,  988, 1749,  562, 2087,
          833, 1757, 1264,  797,   89, 1418,  938,  410, 1025,  457, 2034, 1211,
          457, 1741,  988, 2637, 1749, 2838, 1749,  988, 1749,  988,  988, 1749,
          988,  988,  988, 1503,  449,  438,  457, 2577, 1236, 1741, 1749, 2637],
        [ 699, 1046, 2875, 2875, 2228, 2875,  595,  699,  699, 1046, 1046, 1046,
         1046,  699,  776, 2466, 2535, 1157, 1046,  699, 2772,  687,  203, 1423,
         1423, 2562,  626,  626, 2317, 1287, 1287, 2340,  108,  335, 2173, 2890,
         2173, 2173, 2173,  298, 1423, 1772, 2777, 2875,  335,  298,  817, 2348,
          298, 2562, 1245, 1111, 2624, 2684, 2200, 1506, 2538, 1854, 1623,  557,
         1129, 1432, 1801, 1801, 2872, 1412, 2114, 2777, 2463,  132, 1691, 1011,
          540, 1547, 1772,  103, 1547,  103, 2348, 1547,  268, 1615,  268, 2268,
         1623, 2397, 1623, 2675, 1194, 2675, 1194,  657, 1877, 2779, 2779, 2779,
         2779,  540, 1521, 2577, 1631,  481, 2628, 1496,  780, 2548,  662,  393,
         1028,  945, 2696, 2651,  462, 1954,  448, 2371,  755,  448, 1631, 1631,
           38, 1731, 1731, 1631, 1631, 1695, 2447,  771,   23,  116,  773, 1320,
           65,  378,  826,  327, 1040, 1786, 2651,  403,  184, 2675, 2651, 2371,
         2371, 1031, 2210, 1189, 1857,  842,  842, 1786,  995,  555, 2130,   74]],
       device='cuda:0', dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0017, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is 0
idx2 is  tensor([[1928, 1178, 1178,  ..., 2144, 2066, 2974],
        [2160, 2908,  467,  ..., 2223, 2223, 1277],
        [2816, 2785, 2149,  ...,  141,  141, 1741],
        [2872, 2872,  335,  ...,  648,  648, 1674]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0007, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0239, device='cuda:0', grad_fn=<MulBackward0>)
idx2 is  tensor([[1425, 2726,  134,  ...,   59, 1873, 2719],
        [2280,  554,  933,  ..., 2360, 1227, 2360],
        [2255,  573, 2799,  ...,  619,  553,  325],
        [2562, 1423, 2875,  ...,  133,  108, 1548]], device='cuda:0',
       dtype=torch.int32, grad_fn=<ChamferFunctionBackward>)
lapace is tensor(0.0012, device='cuda:0', grad_fn=<MulBackward0>)
move_loss is tensor(0.0136, device='cuda:0', grad_fn=<MulBackward0>)
^Z










input1 tensor([[[ 0.0374,  0.1370, -0.0107],
         [ 0.0924,  0.1210, -0.0545],
         [ 0.1191,  0.0907, -0.0339],
         ...,
         [-0.0429, -0.0868,  0.0318],
         [-0.0426, -0.0981,  0.0334],
         [-0.0576, -0.0974,  0.0447]],

        [[ 0.0708,  0.1122, -0.0205],
         [ 0.1088,  0.1082, -0.0498],
         [ 0.1399,  0.0732, -0.0347],
         ...,
         [-0.0665, -0.0948,  0.0767],
         [-0.0738, -0.1054,  0.0777],
         [-0.0944, -0.1112,  0.0875]],

        [[ 0.0222,  0.1281,  0.0056],
         [ 0.0648,  0.1143, -0.0408],
         [ 0.1023,  0.0849, -0.0337],
         ...,
         [-0.0589, -0.0551,  0.0228],
         [-0.0517, -0.0632,  0.0242],
         [-0.0653, -0.0653,  0.0300]],

        [[ 0.1137,  0.1153, -0.0353],
         [ 0.1548,  0.1042, -0.0615],
         [ 0.1722,  0.0848, -0.0507],
         ...,
         [-0.0380, -0.1294,  0.0940],
         [-0.0397, -0.1414,  0.0998],
         [-0.0556, -0.1540,  0.1196]]], device='cuda:0', grad_fn=<CatBackward>)
nearest_normals is tensor([[[ 0.2907, -0.4572,  0.8405],
         [ 0.2907, -0.4572,  0.8405],
         [ 0.2907, -0.4572,  0.8405],
         ...,
         [ 0.2907, -0.4572,  0.8405],
         [ 0.2907, -0.4572,  0.8405],
         [ 0.2907, -0.4572,  0.8405]],

        [[ 0.5351,  0.3902, -0.7493],
         [ 0.5351,  0.3902, -0.7493],
         [-0.5351, -0.3902,  0.7493],
         ...,
         [ 0.5351,  0.3902, -0.7493],
         [-0.5351, -0.3902,  0.7493],
         [ 0.5351,  0.3902, -0.7493]],

        [[-0.2430, -0.4785,  0.8438],
         [-0.2430, -0.4785,  0.8438],
         [-0.2430, -0.4785,  0.8438],
         ...,
         [-0.2430, -0.4785,  0.8438],
         [ 0.2430,  0.4785, -0.8438],
         [-0.2430, -0.4785,  0.8438]],

        [[-0.1127, -0.4471,  0.8873],
         [-0.1127, -0.4471,  0.8873],
         [ 0.1127,  0.4471, -0.8873],
         ...,
         [ 0.9169,  0.1796, -0.3565],
         [-0.9169, -0.1796,  0.3565],
         [ 0.9169,  0.1796, -0.3565]]], device='cuda:0')
lap1 is tensor([[[ 5.5953e-03,  7.2180e-03,  3.0676e-03],
         [ 5.1670e-03,  5.6596e-03,  2.1204e-03],
         [-2.7990e-03, -7.2087e-03, -1.4063e-03],
         ...,
         [-2.2595e-04, -2.4830e-04, -2.2759e-04],
         [ 1.6120e-03, -2.0223e-04, -8.9105e-04],
         [-3.2576e-04,  4.2833e-05,  2.9566e-03]],

        [[ 6.1318e-03,  8.3085e-03,  3.6698e-03],
         [ 5.3045e-03,  7.7857e-03,  2.3612e-03],
         [-4.2055e-03, -6.7938e-03, -4.4015e-03],
         ...,
         [-1.9410e-04,  6.2051e-04, -3.2191e-04],
         [ 2.0911e-03, -1.6369e-03, -2.8763e-03],
         [-1.6176e-03,  9.9188e-04,  2.7092e-03]],

        [[ 4.5483e-03,  4.7458e-03,  4.8779e-03],
         [ 4.6322e-03,  3.4290e-03,  4.6341e-03],
         [-3.7107e-03, -4.6027e-03, -3.2522e-03],
         ...,
         [-4.1289e-04,  1.1548e-05,  2.0593e-04],
         [ 9.2040e-04, -3.4326e-04, -1.9250e-03],
         [ 5.9477e-04,  6.9920e-04,  2.8250e-03]],

        [[ 6.1360e-03,  9.1835e-03,  2.2923e-03],
         [ 3.0996e-03,  7.9471e-03, -1.0081e-04],
         [-2.5685e-03, -8.1506e-03, -6.4503e-05],
         ...,
         [-1.7227e-04, -1.9595e-06, -3.2508e-04],
         [ 2.4480e-03, -3.7593e-04, -1.6479e-03],
         [-1.3705e-03,  4.7872e-04,  7.6261e-04]]], device='cuda:0',
       grad_fn=<SubBackward0>)
input1 tensor([[[ 0.1009,  0.0832,  0.0474],
         [ 0.0959,  0.0861,  0.0360],
         [ 0.0443,  0.0705,  0.0038],
         ...,
         [-0.0518, -0.0875,  0.1143],
         [-0.0514, -0.0910,  0.1115],
         [-0.0508, -0.0870,  0.1159]],

        [[ 0.0963,  0.0982,  0.0310],
         [ 0.0948,  0.0994,  0.0271],
         [ 0.0640,  0.0687,  0.0156],
         ...,
         [-0.0717, -0.1103,  0.0437],
         [-0.0710, -0.1129,  0.0393],
         [-0.0724, -0.1089,  0.0456]],

        [[ 0.0942,  0.0408,  0.0870],
         [ 0.0950,  0.0418,  0.0852],
         [ 0.0708,  0.0395,  0.0526],
         ...,
         [-0.0305, -0.0643,  0.1024],
         [-0.0343, -0.0669,  0.0962],
         [-0.0297, -0.0633,  0.1028]],

        [[ 0.0858,  0.1042, -0.0103],
         [ 0.0516,  0.1028, -0.0305],
         [ 0.0373,  0.0830, -0.0406],
         ...,
         [-0.1233, -0.0797, -0.0208],
         [-0.1229, -0.0833, -0.0197],
         [-0.1226, -0.0791, -0.0191]]], device='cuda:0', grad_fn=<CatBackward>)
nearest_normals is tensor([[[-5.6647e-01,  2.8162e-01, -7.7446e-01],
         [ 9.6046e-01,  1.1632e-01,  2.5296e-01],
         [-9.8659e-01,  8.0862e-02, -1.4180e-01],
         ...,
         [ 5.2963e-17,  8.6868e-01,  4.9538e-01],
         [-5.6309e-02, -4.2669e-01, -9.0265e-01],
         [ 5.2963e-17,  8.6868e-01,  4.9538e-01]],

        [[ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         [-2.2307e-16, -8.9617e-01, -4.4371e-01],
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         ...,
         [-1.6784e-01,  1.5143e-01, -9.7411e-01],
         [-1.6784e-01,  1.5143e-01, -9.7411e-01],
         [-1.6784e-01,  1.5143e-01, -9.7411e-01]],

        [[-6.8820e-01, -3.4842e-01,  6.3638e-01],
         [-6.8820e-01, -3.4842e-01,  6.3638e-01],
         [ 7.2965e-01,  3.2840e-01, -5.9981e-01],
         ...,
         [ 6.8820e-01,  3.4842e-01, -6.3638e-01],
         [-7.8823e-01, -2.9553e-01,  5.3977e-01],
         [ 7.8823e-01,  2.9553e-01, -5.3977e-01]],

        [[ 4.0537e-16,  8.9369e-01,  4.4869e-01],
         [ 4.0537e-16,  8.9369e-01,  4.4869e-01],
         [-4.0537e-16, -8.9369e-01, -4.4869e-01],
         ...,
         [-3.6002e-01,  8.8397e-01,  2.9831e-01],
         [ 3.4992e-01, -8.8614e-01, -3.0382e-01],
         [-3.6002e-01,  8.8397e-01,  2.9831e-01]]], device='cuda:0')
lap1 is tensor([[[ 0.0011, -0.0248,  0.0190],
         [-0.0243, -0.0007, -0.0176],
         [ 0.0091, -0.0210,  0.0001],
         ...,
         [ 0.0132, -0.0075,  0.0335],
         [-0.0118,  0.0096, -0.0215],
         [ 0.0295,  0.0103, -0.0089]],

        [[ 0.0011, -0.0248,  0.0190],
         [-0.0243, -0.0007, -0.0176],
         [ 0.0091, -0.0210,  0.0001],
         ...,
         [ 0.0132, -0.0075,  0.0335],
         [-0.0118,  0.0096, -0.0215],
         [ 0.0295,  0.0103, -0.0089]],

        [[ 0.0011, -0.0248,  0.0190],
         [-0.0243, -0.0007, -0.0176],
         [ 0.0091, -0.0210,  0.0001],
         ...,
         [ 0.0132, -0.0075,  0.0335],
         [-0.0118,  0.0096, -0.0215],
         [ 0.0295,  0.0103, -0.0089]],

        [[ 0.0011, -0.0248,  0.0190],
         [-0.0243, -0.0007, -0.0176],
         [ 0.0091, -0.0210,  0.0001],
         ...,
         [ 0.0132, -0.0075,  0.0335],
         [-0.0118,  0.0096, -0.0215],
         [ 0.0295,  0.0103, -0.0089]]], device='cuda:0')
input1 tensor([[[-0.1475, -0.1475, -0.0769],
         [-0.1475, -0.1618, -0.0450],
         [-0.1762, -0.1475, -0.0450],
         ...,
         [ 0.0075,  0.1661,  0.1100],
         [ 0.0850,  0.1823, -0.0450],
         [ 0.0850,  0.1847,  0.0325]],

        [[-0.1475, -0.1475, -0.0769],
         [-0.1475, -0.1618, -0.0450],
         [-0.1762, -0.1475, -0.0450],
         ...,
         [ 0.0075,  0.1661,  0.1100],
         [ 0.0850,  0.1823, -0.0450],
         [ 0.0850,  0.1847,  0.0325]],

        [[-0.1475, -0.1475, -0.0769],
         [-0.1475, -0.1618, -0.0450],
         [-0.1762, -0.1475, -0.0450],
         ...,
         [ 0.0075,  0.1661,  0.1100],
         [ 0.0850,  0.1823, -0.0450],
         [ 0.0850,  0.1847,  0.0325]],

        [[-0.1475, -0.1475, -0.0769],
         [-0.1475, -0.1618, -0.0450],
         [-0.1762, -0.1475, -0.0450],
         ...,
         [ 0.0075,  0.1661,  0.1100],
         [ 0.0850,  0.1823, -0.0450],
         [ 0.0850,  0.1847,  0.0325]]], device='cuda:0')
nearest_normals is tensor([[[ 9.0553e-01, -1.1028e-01,  4.0970e-01],
         [-9.8948e-01, -1.4121e-01,  3.1462e-02],
         [-9.8656e-01,  7.1836e-02, -1.4673e-01],
         ...,
         [ 5.2963e-17,  8.6868e-01,  4.9538e-01],
         [ 5.2963e-17,  8.6868e-01,  4.9538e-01],
         [ 5.2963e-17,  8.6868e-01,  4.9538e-01]],

        [[-1.7357e-01,  2.9096e-01, -9.4086e-01],
         [ 2.7458e-02,  8.1692e-01,  5.7610e-01],
         [ 1.7574e-01, -4.3680e-01,  8.8222e-01],
         ...,
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01]],

        [[-6.8123e-01,  3.5157e-01, -6.4213e-01],
         [-6.8711e-01,  3.4892e-01, -6.3729e-01],
         [ 7.8823e-01,  2.9553e-01, -5.3978e-01],
         ...,
         [ 7.8823e-01,  2.9553e-01, -5.3977e-01],
         [ 7.8823e-01,  2.9553e-01, -5.3977e-01],
         [ 7.8823e-01,  2.9553e-01, -5.3977e-01]],

        [[ 4.0537e-16,  8.9369e-01,  4.4869e-01],
         [ 2.2340e-01,  8.4152e-01,  4.9188e-01],
         [-4.0537e-16, -8.9369e-01, -4.4869e-01],
         ...,
         [-4.0537e-16, -8.9369e-01, -4.4869e-01],
         [-4.0537e-16, -8.9369e-01, -4.4869e-01],
         [-4.0537e-16, -8.9369e-01, -4.4869e-01]]], device='cuda:0')
lap1 is tensor([[[-5.1219e-03,  3.0769e-03,  8.2228e-03],
         [ 8.5431e-03,  3.4329e-03, -6.0178e-05],
         [ 1.3274e-02, -4.6895e-03, -1.4677e-02],
         ...,
         [ 1.1731e-02,  2.2467e-03, -1.0486e-02],
         [ 1.1670e-02,  1.1742e-04, -4.6092e-03],
         [-1.5728e-02, -8.5503e-03,  1.1955e-02]],

        [[-1.1683e-02,  1.3787e-02,  1.0104e-02],
         [ 5.2743e-03,  2.4877e-03, -7.6421e-05],
         [ 2.1357e-02, -9.1424e-03, -2.3740e-02],
         ...,
         [ 9.3825e-03,  4.6340e-03, -5.6920e-03],
         [ 6.9521e-03,  1.8338e-03, -3.6921e-03],
         [-1.0872e-02, -9.7208e-03,  8.4803e-03]],

        [[ 3.6844e-04,  4.4307e-03,  9.1303e-03],
         [ 9.5105e-03, -1.4502e-03, -4.5983e-03],
         [ 1.1701e-02, -2.2464e-03, -1.3176e-02],
         ...,
         [ 6.7937e-03,  2.9610e-03, -2.1189e-04],
         [ 7.8503e-03,  6.7744e-04, -3.8899e-03],
         [-9.5505e-03, -6.0133e-03,  5.0844e-03]],

        [[-1.2992e-03,  1.0194e-02,  3.0113e-03],
         [ 8.7446e-03,  6.8635e-03,  4.3264e-03],
         [ 1.1096e-02, -3.5955e-03, -1.6395e-02],
         ...,
         [ 1.2710e-02,  4.7743e-03, -7.7557e-03],
         [ 1.0549e-03,  2.8519e-03, -1.0436e-03],
         [-9.4814e-03, -9.4460e-03,  8.7163e-03]]], device='cuda:0',
       grad_fn=<SubBackward0>)
input1 tensor([[[ 0.1202,  0.0328, -0.0163],
         [ 0.1550,  0.0345, -0.0384],
         [ 0.1885,  0.0143, -0.0431],
         ...,
         [ 0.0443, -0.1968,  0.0644],
         [ 0.0411, -0.2077,  0.0784],
         [ 0.0028, -0.2189,  0.1062]],

        [[ 0.1031,  0.0642, -0.0240],
         [ 0.1708,  0.0453, -0.0535],
         [ 0.1875,  0.0414, -0.0690],
         ...,
         [ 0.0377, -0.1963,  0.0785],
         [ 0.0366, -0.2082,  0.0865],
         [ 0.0146, -0.2257,  0.1055]],

        [[ 0.1252,  0.0285, -0.0117],
         [ 0.1480,  0.0321, -0.0416],
         [ 0.1797,  0.0090, -0.0364],
         ...,
         [-0.0463, -0.1128,  0.0600],
         [-0.0445, -0.1250,  0.0657],
         [-0.0664, -0.1393,  0.0831]],

        [[ 0.1282,  0.0413, -0.0275],
         [ 0.1672,  0.0494, -0.0431],
         [ 0.1863,  0.0172, -0.0492],
         ...,
         [ 0.0438, -0.1983,  0.0719],
         [ 0.0297, -0.2080,  0.0867],
         [ 0.0126, -0.2262,  0.1047]]], device='cuda:0', grad_fn=<CatBackward>)
nearest_normals is tensor([[[-9.8384e-01,  1.5530e-02, -1.7838e-01],
         [ 9.8384e-01, -1.5530e-02,  1.7838e-01],
         [ 9.8571e-01, -4.3701e-02,  1.6269e-01],
         ...,
         [-5.6647e-01,  2.8162e-01, -7.7446e-01],
         [-5.6647e-01,  2.8162e-01, -7.7446e-01],
         [-5.6647e-01,  2.8162e-01, -7.7446e-01]],

        [[ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         ...,
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01],
         [ 2.2307e-16,  8.9617e-01,  4.4371e-01]],

        [[ 8.0896e-17,  8.7714e-01,  4.8024e-01],
         [ 8.0896e-17,  8.7714e-01,  4.8024e-01],
         [-8.0896e-17, -8.7714e-01, -4.8024e-01],
         ...,
         [ 8.0896e-17,  8.7714e-01,  4.8024e-01],
         [ 8.0896e-17,  8.7714e-01,  4.8024e-01],
         [ 8.0896e-17,  8.7714e-01,  4.8024e-01]],

        [[-4.0537e-16, -8.9369e-01, -4.4869e-01],
         [-9.1642e-01, -1.7958e-01,  3.5768e-01],
         [-4.0537e-16, -8.9369e-01, -4.4869e-01],
         ...,
         [-4.5618e-01, -7.6889e-01, -4.4800e-01],
         [-4.5618e-01, -7.6889e-01, -4.4800e-01],
         [-4.5618e-01, -7.6889e-01, -4.4800e-01]]], device='cuda:0')


         t is tensor([[-1.0989e-01, -8.5065e-01, -5.1412e-01],
        [ 6.6779e-01,  3.4694e-01,  6.5855e-01],
        [-5.3997e-01, -3.8317e-01,  7.4941e-01],
        ...,
        [-4.1502e-17, -8.9037e-01, -4.5525e-01],
        [ 4.1502e-17,  8.9037e-01,  4.5525e-01],
        [-4.1502e-17, -8.9037e-01, -4.5525e-01]], device='cuda:0')
i is tensor([1982, 1982, 1740,  414, 1982, 1201, 1982,  414,  414,  414,  414, 1740,
         414,  414,  414,  414,  414,  414,  414,  414,  414,  414, 1982,  414,
        1982,  414, 1740,  414, 1982,  414,  414, 1982, 1740,  414,  414, 1740,
        1740,  414, 1740,  414, 2286,  414,  414,  414,  414, 1740,  414,  414,
         414,  414, 1982, 1982,  414, 1348,  414,  414,  414,  414,  414, 1348,
         414,  414,  414,  414,  414,  414, 1740, 1740,  414,  414,  414,  414,
         414,  414, 1740,  414, 1740,  414,  414,  414,  414,  414,  414,  414,
        1982, 1740,  414,  414,  414,  414,  414,  414,  414,  414,  414, 1740,
         202, 2067,  202,  414,  414,  414, 1740, 1982,  414,  414, 1740,  414,
         414, 1982,  414,  414,  414,  414,  414,  414,  414,  414,  414, 1982,
        1982, 1740,  414, 1740,  414,  414,  414,  414,  414, 1740,  414,  414,
        1740,  414,  414,  414,  414, 1740,  414,  414,  414,  414,  414,  414,
         414,  414,  414,  414, 1740,  414,  414,  414, 1740,  414, 1740,  414],
       device='cuda:0')
t is tensor([[ 1.6126e-16,  8.8640e-01,  4.6293e-01],
        [ 7.8903e-01,  2.8440e-01, -5.4456e-01],
        [-6.1436e-01,  3.6526e-01, -6.9939e-01],
        ...,
        [-1.6126e-16, -8.8640e-01, -4.6293e-01],
        [ 9.9998e-01,  3.1447e-03, -6.0213e-03],
        [ 1.6126e-16,  8.8640e-01,  4.6293e-01]], device='cuda:0')
i is tensor([2689, 2689,   16, 2689, 2689,   16, 2689, 2689,   16,   16, 2689,   16,
        2689, 2689,   16,  729, 2689, 2689, 2689, 2689,   16,  729, 2689,   16,
        2689,  729,   16,   16, 2689, 2689,   16, 2689,   16,  729,   16,   16,
          16, 2689,   16, 2689,   16,   16,  729,  729, 2689,   16,  729,   16,
          16,   16, 2689, 2689,   16, 2689,   16,  729,   16,   16,  729, 2689,
          16,   16,   16,   16,   16,   16,   16,   16,  729,  729,   16,   16,
        2689,   16,   16,  729,   16,   16,  729,   16,   16,   16,   16,   16,
        2689,   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
          16,   16,   16,   16,   16,   16,   16, 2689,   16,   16,   16,   16,
          16, 2689,   16,   16,   16,   16,   16,   16,   16,   16,   16, 2689,
          16,   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
          16,  168,  729,   16,   16,   16,   16,   16,   16,  729,   16,   16,
          16,   16,  729,   16,   16,   16,  168,   16,   16,  168,   16,  168],
       device='cuda:0')



idx2.shape torch.Size([4, 156])#4 is the batchsize
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################
idx2.shape torch.Size([4, 618])
#####################
nearest_normals torch.Size([4, 618, 3])
#####################
input1 torch.Size([4, 618, 3])
#####################
idx2.shape torch.Size([4, 2466])
#####################
nearest_normals torch.Size([4, 2466, 3])
#####################
input1 torch.Size([4, 2466, 3])
#####################
idx2.shape torch.Size([4, 156])
#####################
nearest_normals torch.Size([4, 156, 3])
#####################
input1 torch.Size([4, 156, 3])
#####################

